{"file":"/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/shared/auth/has-any-authority.directive.spec.ts","mappings":"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","names":[],"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/shared/auth/has-any-authority.directive.spec.ts"],"sourcesContent":["jest.mock('app/core/auth/account.service');\n\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { Subject } from 'rxjs';\n\nimport { AccountService } from 'app/core/auth/account.service';\nimport { Account } from 'app/core/auth/account.model';\n\nimport { HasAnyAuthorityDirective } from './has-any-authority.directive';\n\n@Component({\n  template: ` <div *jhiHasAnyAuthority=\"'ROLE_ADMIN'\" #content></div> `,\n})\nclass TestHasAnyAuthorityDirectiveComponent {\n  @ViewChild('content', { static: false })\n  content?: ElementRef;\n}\n\ndescribe('HasAnyAuthorityDirective tests', () => {\n  let mockAccountService: AccountService;\n  const authenticationState = new Subject<Account | null>();\n\n  beforeEach(\n    waitForAsync(() => {\n      TestBed.configureTestingModule({\n        declarations: [HasAnyAuthorityDirective, TestHasAnyAuthorityDirectiveComponent],\n        providers: [AccountService],\n      });\n    })\n  );\n\n  beforeEach(() => {\n    mockAccountService = TestBed.inject(AccountService);\n    mockAccountService.getAuthenticationState = jest.fn(() => authenticationState.asObservable());\n  });\n\n  describe('set jhiHasAnyAuthority', () => {\n    it('should show restricted content to user if user has required role', () => {\n      // GIVEN\n      mockAccountService.hasAnyAuthority = jest.fn(() => true);\n      const fixture = TestBed.createComponent(TestHasAnyAuthorityDirectiveComponent);\n      const comp = fixture.componentInstance;\n\n      // WHEN\n      fixture.detectChanges();\n\n      // THEN\n      expect(comp.content).toBeDefined();\n    });\n\n    it('should not show restricted content to user if user has not required role', () => {\n      // GIVEN\n      mockAccountService.hasAnyAuthority = jest.fn(() => false);\n      const fixture = TestBed.createComponent(TestHasAnyAuthorityDirectiveComponent);\n      const comp = fixture.componentInstance;\n\n      // WHEN\n      fixture.detectChanges();\n\n      // THEN\n      expect(comp.content).toBeUndefined();\n    });\n  });\n\n  describe('change authorities', () => {\n    it('should show or not show restricted content correctly if user authorities are changing', () => {\n      // GIVEN\n      mockAccountService.hasAnyAuthority = jest.fn(() => true);\n      const fixture = TestBed.createComponent(TestHasAnyAuthorityDirectiveComponent);\n      const comp = fixture.componentInstance;\n\n      // WHEN\n      fixture.detectChanges();\n\n      // THEN\n      expect(comp.content).toBeDefined();\n\n      // GIVEN\n      mockAccountService.hasAnyAuthority = jest.fn(() => false);\n\n      // WHEN\n      authenticationState.next();\n      fixture.detectChanges();\n\n      // THEN\n      expect(comp.content).toBeUndefined();\n\n      // GIVEN\n      mockAccountService.hasAnyAuthority = jest.fn(() => true);\n\n      // WHEN\n      authenticationState.next();\n      fixture.detectChanges();\n\n      // THEN\n      expect(comp.content).toBeDefined();\n    });\n  });\n\n  describe('ngOnDestroy', () => {\n    it('should destroy authentication state subscription on component destroy', () => {\n      // GIVEN\n      mockAccountService.hasAnyAuthority = jest.fn(() => true);\n      const fixture = TestBed.createComponent(TestHasAnyAuthorityDirectiveComponent);\n      const div = fixture.debugElement.queryAllNodes(By.directive(HasAnyAuthorityDirective))[0];\n      const hasAnyAuthorityDirective = div.injector.get(HasAnyAuthorityDirective);\n\n      // WHEN\n      fixture.detectChanges();\n\n      // THEN\n      expect(mockAccountService.hasAnyAuthority).toHaveBeenCalled();\n\n      // WHEN\n      jest.clearAllMocks();\n      authenticationState.next();\n\n      // THEN\n      expect(mockAccountService.hasAnyAuthority).toHaveBeenCalled();\n\n      // WHEN\n      jest.clearAllMocks();\n      hasAnyAuthorityDirective.ngOnDestroy();\n      authenticationState.next();\n\n      // THEN\n      expect(mockAccountService.hasAnyAuthority).not.toHaveBeenCalled();\n    });\n  });\n});\n"],"version":3}