{"version":3,"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/admin/logs/logs.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeS;;;;;;;;;;;;;;;;;;;;AAfT,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AAGA,MAAA,4BAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,4CAAA,CAAA,CAAA;;;;IAIa,WAAW,GAAA,MAAX,WAAW,CAAA;AACtB,EAAA,WAAA,CAAoB,IAApB,EAA8C,wBAA9C,EAAgG;AAAA;AAAA;AAAA;AAA5E,SAAA,IAAA,GAAA,IAAA;;AAA4E;AAAA;AAAlD,SAAA,wBAAA,GAAA,wBAAA;AAAsD;;AAEpG,EAAA,WAAW,CAAC,IAAD,EAAe,eAAf,EAAqC;AAAA;AAAA;AAAA;AAC9C,WAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,wBAAL,CAA8B,cAA9B,CAA6C,wBAAwB,IAArE,CAAf,EAA2F;AAAE,MAAA;AAAF,KAA3F,CAAP;AACD;;AAED,EAAA,OAAO,GAAA;AAAA;AAAA;AAAA;AACL,WAAO,KAAK,IAAL,CAAU,GAAV,CAA+B,KAAK,wBAAL,CAA8B,cAA9B,CAA6C,oBAA7C,CAA/B,CAAP;AACD;;AATqB,C;;;;;;;;;;UAPf,MAAA,CAAA;;UAGA,4BAAA,CAAA;;;;;;AAII,WAAW,GAAA,OAAA,CAAA,UAAA,CAAA,CADvB,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CACuB,E,yCACI,MAAA,CAAA,U,EAA8C,4BAAA,CAAA,wB,EADlD,CAAA,EAAX,WAAW,CAAX;;;;AAAA,OAAA,CAAA,WAAA,GAAA,WAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { LoggersResponse, Level } from './log.model';\n\n@Injectable({ providedIn: 'root' })\nexport class LogsService {\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\n\n  changeLevel(name: string, configuredLevel: Level): Observable<{}> {\n    return this.http.post(this.applicationConfigService.getEndpointFor('management/loggers/' + name), { configuredLevel });\n  }\n\n  findAll(): Observable<LoggersResponse> {\n    return this.http.get<LoggersResponse>(this.applicationConfigService.getEndpointFor('management/loggers'));\n  }\n}\n"]}