{"file":"/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/shared/alert/alert-error.component.spec.ts","mappings":"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","names":[],"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/shared/alert/alert-error.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed, waitForAsync } from '@angular/core/testing';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\n\nimport { EventManager } from 'app/core/util/event-manager.service';\nimport { Alert, AlertService } from 'app/core/util/alert.service';\n\nimport { AlertErrorComponent } from './alert-error.component';\n\ndescribe('Component Tests', () => {\n  describe('Alert Error Component', () => {\n    let comp: AlertErrorComponent;\n    let fixture: ComponentFixture<AlertErrorComponent>;\n    let eventManager: EventManager;\n    let alertService: AlertService;\n\n    beforeEach(\n      waitForAsync(() => {\n        TestBed.configureTestingModule({\n          declarations: [AlertErrorComponent],\n          providers: [EventManager, AlertService],\n        })\n          .overrideTemplate(AlertErrorComponent, '')\n          .compileComponents();\n      })\n    );\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(AlertErrorComponent);\n      comp = fixture.componentInstance;\n      eventManager = TestBed.inject(EventManager);\n      alertService = TestBed.inject(AlertService);\n      alertService.addAlert = (alert: Alert, alerts?: Alert[]) => {\n        if (alerts) {\n          alerts.push(alert);\n        }\n        return alert;\n      };\n    });\n\n    describe('Error Handling', () => {\n      it('Should display an alert on status 0', () => {\n        // GIVEN\n        eventManager.broadcast({ name: 'weddingplannerApp.httpError', content: { status: 0 } });\n        // THEN\n        expect(comp.alerts.length).toBe(1);\n        expect(comp.alerts[0].message).toBe('Server not reachable');\n      });\n\n      it('Should display an alert on status 404', () => {\n        // GIVEN\n        eventManager.broadcast({ name: 'weddingplannerApp.httpError', content: { status: 404 } });\n        // THEN\n        expect(comp.alerts.length).toBe(1);\n        expect(comp.alerts[0].message).toBe('Not found');\n      });\n\n      it('Should display an alert on generic error', () => {\n        // GIVEN\n        eventManager.broadcast({ name: 'weddingplannerApp.httpError', content: { error: { message: 'Error Message' } } });\n        eventManager.broadcast({ name: 'weddingplannerApp.httpError', content: { error: 'Second Error Message' } });\n        // THEN\n        expect(comp.alerts.length).toBe(2);\n        expect(comp.alerts[0].message).toBe('Error Message');\n        expect(comp.alerts[1].message).toBe('Second Error Message');\n      });\n\n      it('Should display an alert on status 400 for generic error', () => {\n        // GIVEN\n        const response = new HttpErrorResponse({\n          url: 'http://localhost:8080/api/foos',\n          headers: new HttpHeaders(),\n          status: 400,\n          statusText: 'Bad Request',\n          error: {\n            type: 'https://www.jhipster.tech/problem/constraint-violation',\n            title: 'Bad Request',\n            status: 400,\n            path: '/api/foos',\n            message: 'error.validation',\n          },\n        });\n        eventManager.broadcast({ name: 'weddingplannerApp.httpError', content: response });\n        // THEN\n        expect(comp.alerts.length).toBe(1);\n        expect(comp.alerts[0].message).toBe('error.validation');\n      });\n\n      it('Should display an alert on status 400 for generic error without message', () => {\n        // GIVEN\n        const response = new HttpErrorResponse({\n          url: 'http://localhost:8080/api/foos',\n          headers: new HttpHeaders(),\n          status: 400,\n          error: 'Bad Request',\n        });\n        eventManager.broadcast({ name: 'weddingplannerApp.httpError', content: response });\n        // THEN\n        expect(comp.alerts.length).toBe(1);\n        expect(comp.alerts[0].message).toBe('Bad Request');\n      });\n\n      it('Should display an alert on status 400 for invalid parameters', () => {\n        // GIVEN\n        const response = new HttpErrorResponse({\n          url: 'http://localhost:8080/api/foos',\n          headers: new HttpHeaders(),\n          status: 400,\n          statusText: 'Bad Request',\n          error: {\n            type: 'https://www.jhipster.tech/problem/constraint-violation',\n            title: 'Method argument not valid',\n            status: 400,\n            path: '/api/foos',\n            message: 'error.validation',\n            fieldErrors: [{ objectName: 'foo', field: 'minField', message: 'Min' }],\n          },\n        });\n        eventManager.broadcast({ name: 'weddingplannerApp.httpError', content: response });\n        // THEN\n        expect(comp.alerts.length).toBe(1);\n        expect(comp.alerts[0].message).toBe('Error on field \"MinField\"');\n      });\n\n      it('Should display an alert on status 400 for error headers', () => {\n        // GIVEN\n        const response = new HttpErrorResponse({\n          url: 'http://localhost:8080/api/foos',\n          headers: new HttpHeaders().append('app-error', 'Error Message').append('app-params', 'foo'),\n          status: 400,\n          statusText: 'Bad Request',\n          error: {\n            status: 400,\n            message: 'error.validation',\n          },\n        });\n        eventManager.broadcast({ name: 'weddingplannerApp.httpError', content: response });\n        // THEN\n        expect(comp.alerts.length).toBe(1);\n        expect(comp.alerts[0].message).toBe('Error Message');\n      });\n\n      it('Should display an alert on status 500 with detail', () => {\n        // GIVEN\n        const response = new HttpErrorResponse({\n          url: 'http://localhost:8080/api/foos',\n          headers: new HttpHeaders(),\n          status: 500,\n          statusText: 'Internal server error',\n          error: {\n            status: 500,\n            message: 'error.http.500',\n            detail: 'Detailed error message',\n          },\n        });\n        eventManager.broadcast({ name: 'weddingplannerApp.httpError', content: response });\n        // THEN\n        expect(comp.alerts.length).toBe(1);\n        expect(comp.alerts[0].message).toBe('Detailed error message');\n      });\n    });\n  });\n});\n"],"version":3}