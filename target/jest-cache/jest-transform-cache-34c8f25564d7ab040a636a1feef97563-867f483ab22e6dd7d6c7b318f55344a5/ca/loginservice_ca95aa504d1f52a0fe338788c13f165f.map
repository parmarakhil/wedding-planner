{"version":3,"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/login/login.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeG;;;;;;;;;;;;;;;;;;;;AAfH,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AAEA,MAAA,WAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AAGA,MAAA,iBAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,+BAAA,CAAA,CAAA;AACA,MAAA,kBAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,gCAAA,CAAA,CAAA;;;;IAIa,YAAY,GAAA,MAAZ,YAAY,CAAA;AACvB,EAAA,WAAA,CAAoB,cAApB,EAA4D,kBAA5D,EAAkG;AAAA;AAAA;AAAA;AAA9E,SAAA,cAAA,GAAA,cAAA;;AAA8E;AAAA;AAAtC,SAAA,kBAAA,GAAA,kBAAA;AAA0C;;AAEtG,EAAA,KAAK,CAAC,WAAD,EAAmB;AAAA;AAAA;AAAA;AACtB,WAAO,KAAK,kBAAL,CAAwB,KAAxB,CAA8B,WAA9B,EAA2C,IAA3C,CAAgD,WAAA,CAAA,QAAA,CAAS,MAAM;AAAA;AAAA;AAAA;AAAA,kBAAK,cAAL,CAAoB,QAApB,CAA6B,IAA7B;AAAkC,KAAjD,CAAhD,CAAP;AACD;;AAED,EAAA,MAAM,GAAA;AAAA;AAAA;AAAA;AACJ,SAAK,kBAAL,CAAwB,MAAxB,GAAiC,SAAjC,CAA2C;AAAE,MAAA,QAAQ,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA,oBAAK,cAAL,CAAoB,YAApB,CAAiC,IAAjC;AAAsC;AAAxD,KAA3C;AACD;;AATsB,C;;;;;;;;;;UALhB,iBAAA,CAAA;;UACA,kBAAA,CAAA;;;;;;AAII,YAAY,GAAA,OAAA,CAAA,UAAA,CAAA,CADxB,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CACwB,E,yCACa,iBAAA,CAAA,c,EAA4C,kBAAA,CAAA,kB,EADzD,CAAA,EAAZ,YAAY,CAAZ;;;;AAAA,OAAA,CAAA,YAAA,GAAA,YAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { Account } from 'app/core/auth/account.model';\nimport { AccountService } from 'app/core/auth/account.service';\nimport { AuthServerProvider } from 'app/core/auth/auth-jwt.service';\nimport { Login } from './login.model';\n\n@Injectable({ providedIn: 'root' })\nexport class LoginService {\n  constructor(private accountService: AccountService, private authServerProvider: AuthServerProvider) {}\n\n  login(credentials: Login): Observable<Account | null> {\n    return this.authServerProvider.login(credentials).pipe(mergeMap(() => this.accountService.identity(true)));\n  }\n\n  logout(): void {\n    this.authServerProvider.logout().subscribe({ complete: () => this.accountService.authenticate(null) });\n  }\n}\n"]}