2e9c929c3178a453b17a9356be89c3b8
"use strict";

/* istanbul ignore next */
function cov_8m4vf360s() {
  var path = "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/core/config/application-config.service.ts";
  var hash = "9443012d945512e25da4efde6748690f00e0d2a2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/core/config/application-config.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 42
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 31
        },
        end: {
          line: 19,
          column: 1
        }
      },
      "5": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 33
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 45
        }
      },
      "7": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 16,
          column: 9
        }
      },
      "8": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 75
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "10": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 24,
          column: 29
        }
      },
      "11": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 38
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        }, {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/core/config/application-config.service.ts",
      mappings: ";;;;AAAA,wCAA2C;IAK9B,wBAAwB,SAAxB,wBAAwB;;QAC3B,mBAAc,GAAG,EAAE,CAAC;IAY9B,CAAC;IAVC,iBAAiB,CAAC,cAAsB;QACtC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IAED,cAAc,CAAC,GAAW,EAAE,YAAqB;QAC/C,IAAI,YAAY,EAAE;YAChB,OAAO,GAAG,IAAI,CAAC,cAAc,YAAY,YAAY,IAAI,GAAG,EAAE,CAAC;SAChE;QACD,OAAO,GAAG,IAAI,CAAC,cAAc,GAAG,GAAG,EAAE,CAAC;IACxC,CAAC;CACF,CAAA;AAbY,wBAAwB;IAHpC,iBAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,wBAAwB,CAapC;AAbY,4DAAwB",
      names: [],
      sources: ["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/core/config/application-config.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApplicationConfigService {\n  private endpointPrefix = '';\n\n  setEndpointPrefix(endpointPrefix: string): void {\n    this.endpointPrefix = endpointPrefix;\n  }\n\n  getEndpointFor(api: string, microservice?: string): string {\n    if (microservice) {\n      return `${this.endpointPrefix}services/${microservice}/${api}`;\n    }\n    return `${this.endpointPrefix}${api}`;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9443012d945512e25da4efde6748690f00e0d2a2"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8m4vf360s = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_8m4vf360s();
cov_8m4vf360s().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_8m4vf360s().s[1]++;
exports.ApplicationConfigService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_8m4vf360s().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_8m4vf360s().s[3]++, require("@angular/core"));

/* istanbul ignore next */
cov_8m4vf360s().s[4]++;
let ApplicationConfigService = class ApplicationConfigService {
  constructor() {
    /* istanbul ignore next */
    cov_8m4vf360s().f[0]++;
    cov_8m4vf360s().s[5]++;
    this.endpointPrefix = '';
  }

  setEndpointPrefix(endpointPrefix) {
    /* istanbul ignore next */
    cov_8m4vf360s().f[1]++;
    cov_8m4vf360s().s[6]++;
    this.endpointPrefix = endpointPrefix;
  }

  getEndpointFor(api, microservice) {
    /* istanbul ignore next */
    cov_8m4vf360s().f[2]++;
    cov_8m4vf360s().s[7]++;

    if (microservice) {
      /* istanbul ignore next */
      cov_8m4vf360s().b[0][0]++;
      cov_8m4vf360s().s[8]++;
      return `${this.endpointPrefix}services/${microservice}/${api}`;
    } else
    /* istanbul ignore next */
    {
      cov_8m4vf360s().b[0][1]++;
    }

    cov_8m4vf360s().s[9]++;
    return `${this.endpointPrefix}${api}`;
  }

};

/* istanbul ignore next */
cov_8m4vf360s().s[10]++;
ApplicationConfigService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
})], ApplicationConfigService);

/* istanbul ignore next */
cov_8m4vf360s().s[11]++;
exports.ApplicationConfigService = ApplicationConfigService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ha2hpbHNpbmdoL0Rlc2t0b3AvUHJvamVjdHMvd2VkZGluZy9zcmMvbWFpbi93ZWJhcHAvYXBwL2NvcmUvY29uZmlnL2FwcGxpY2F0aW9uLWNvbmZpZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWVLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWZMLE1BQUEsTUFBQTtBQUFBO0FBQUEseUJBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBOzs7O0lBS2Esd0JBQXdCLEdBQUEsTUFBeEIsd0JBQXdCLENBQUE7Ozs7O0FBQzNCLFNBQUEsY0FBQSxHQUFpQixFQUFqQjtBQVlUOztBQVZDLEVBQUEsaUJBQWlCLENBQUMsY0FBRCxFQUF1QjtBQUFBO0FBQUE7QUFBQTtBQUN0QyxTQUFLLGNBQUwsR0FBc0IsY0FBdEI7QUFDRDs7QUFFRCxFQUFBLGNBQWMsQ0FBQyxHQUFELEVBQWMsWUFBZCxFQUFtQztBQUFBO0FBQUE7QUFBQTs7QUFDL0MsUUFBSSxZQUFKLEVBQWtCO0FBQUE7QUFBQTtBQUFBO0FBQ2hCLGFBQU8sR0FBRyxLQUFLLGNBQWMsWUFBWSxZQUFZLElBQUksR0FBRyxFQUE1RDtBQUNELEtBRkQ7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFEK0M7QUFJL0MsV0FBTyxHQUFHLEtBQUssY0FBYyxHQUFHLEdBQUcsRUFBbkM7QUFDRDs7QUFaa0MsQzs7OztBQUF4Qix3QkFBd0IsR0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBSHBDLE1BQUEsQ0FBQSxVQUFBLENBQVc7QUFDVixFQUFBLFVBQVUsRUFBRTtBQURGLENBQVgsQ0FHb0MsQ0FBQSxFQUF4Qix3QkFBd0IsQ0FBeEI7Ozs7QUFBQSxPQUFBLENBQUEsd0JBQUEsR0FBQSx3QkFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIEFwcGxpY2F0aW9uQ29uZmlnU2VydmljZSB7XG4gIHByaXZhdGUgZW5kcG9pbnRQcmVmaXggPSAnJztcblxuICBzZXRFbmRwb2ludFByZWZpeChlbmRwb2ludFByZWZpeDogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5lbmRwb2ludFByZWZpeCA9IGVuZHBvaW50UHJlZml4O1xuICB9XG5cbiAgZ2V0RW5kcG9pbnRGb3IoYXBpOiBzdHJpbmcsIG1pY3Jvc2VydmljZT86IHN0cmluZyk6IHN0cmluZyB7XG4gICAgaWYgKG1pY3Jvc2VydmljZSkge1xuICAgICAgcmV0dXJuIGAke3RoaXMuZW5kcG9pbnRQcmVmaXh9c2VydmljZXMvJHttaWNyb3NlcnZpY2V9LyR7YXBpfWA7XG4gICAgfVxuICAgIHJldHVybiBgJHt0aGlzLmVuZHBvaW50UHJlZml4fSR7YXBpfWA7XG4gIH1cbn1cbiJdfQ==