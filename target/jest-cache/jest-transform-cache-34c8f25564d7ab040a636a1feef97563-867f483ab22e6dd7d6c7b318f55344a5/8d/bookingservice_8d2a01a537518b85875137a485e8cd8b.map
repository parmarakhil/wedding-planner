{"version":3,"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/entities/booking/service/booking.service.ts"],"names":[],"mappingskBoD;;;;;;;;;;;;;;;;;;;;AAlBpD,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AAEA,MAAA,WAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AACA,MAAA,KAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AAEA,MAAA,WAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;AACA,MAAA,4BAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,4CAAA,CAAA,CAAA;AACA,MAAA,cAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,+BAAA,CAAA,CAAA;AACA,MAAA,eAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;;;IAMa,cAAc,GAAA,MAAd,cAAc,CAAA;AAGzB,EAAA,WAAA,CAAsB,IAAtB,EAAkD,wBAAlD,EAAoG;AAAA;AAAA;AAAA;AAA9E,SAAA,IAAA,GAAA,IAAA;;AAA8E;AAAA;AAAlD,SAAA,wBAAA,GAAA,wBAAA;;AAAkD;AAAA;AAF1F,SAAA,WAAA,GAAc,KAAK,wBAAL,CAA8B,cAA9B,CAA6C,cAA7C,CAAd;AAE8F;;AAExG,EAAA,MAAM,CAAC,OAAD,EAAkB;AAAA;AAAA;AACtB,UAAM,IAAI;AAAA;AAAA,8BAAG,KAAK,qBAAL,CAA2B,OAA3B,CAAH,CAAV;;AADsB;AAAA;AAEtB,WAAO,KAAK,IAAL,CACJ,IADI,CACW,KAAK,WADhB,EAC6B,IAD7B,EACmC;AAAE,MAAA,OAAO,EAAE;AAAX,KADnC,EAEJ,IAFI,CAEC,WAAA,CAAA,GAAA,CAAI,CAAC,GAAD,KAA6B;AAAA;AAAA;AAAA;AAAA,kBAAK,qBAAL,CAA2B,GAA3B;AAA+B,KAAhE,CAFD,CAAP;AAGD;;AAED,EAAA,MAAM,CAAC,OAAD,EAAkB;AAAA;AAAA;AACtB,UAAM,IAAI;AAAA;AAAA,8BAAG,KAAK,qBAAL,CAA2B,OAA3B,CAAH,CAAV;;AADsB;AAAA;AAEtB,WAAO,KAAK,IAAL,CACJ,GADI,CACU,GAAG,KAAK,WAAW,IAAI,eAAA,CAAA,oBAAA,CAAqB,OAArB,CAAuC,EADxE,EAC4E,IAD5E,EACkF;AAAE,MAAA,OAAO,EAAE;AAAX,KADlF,EAEJ,IAFI,CAEC,WAAA,CAAA,GAAA,CAAI,CAAC,GAAD,KAA6B;AAAA;AAAA;AAAA;AAAA,kBAAK,qBAAL,CAA2B,GAA3B;AAA+B,KAAhE,CAFD,CAAP;AAGD;;AAED,EAAA,aAAa,CAAC,OAAD,EAAkB;AAAA;AAAA;AAC7B,UAAM,IAAI;AAAA;AAAA,8BAAG,KAAK,qBAAL,CAA2B,OAA3B,CAAH,CAAV;;AAD6B;AAAA;AAE7B,WAAO,KAAK,IAAL,CACJ,KADI,CACY,GAAG,KAAK,WAAW,IAAI,eAAA,CAAA,oBAAA,CAAqB,OAArB,CAAuC,EAD1E,EAC8E,IAD9E,EACoF;AAAE,MAAA,OAAO,EAAE;AAAX,KADpF,EAEJ,IAFI,CAEC,WAAA,CAAA,GAAA,CAAI,CAAC,GAAD,KAA6B;AAAA;AAAA;AAAA;AAAA,kBAAK,qBAAL,CAA2B,GAA3B;AAA+B,KAAhE,CAFD,CAAP;AAGD;;AAED,EAAA,IAAI,CAAC,EAAD,EAAW;AAAA;AAAA;AAAA;AACb,WAAO,KAAK,IAAL,CACJ,GADI,CACU,GAAG,KAAK,WAAW,IAAI,EAAE,EADnC,EACuC;AAAE,MAAA,OAAO,EAAE;AAAX,KADvC,EAEJ,IAFI,CAEC,WAAA,CAAA,GAAA,CAAI,CAAC,GAAD,KAA6B;AAAA;AAAA;AAAA;AAAA,kBAAK,qBAAL,CAA2B,GAA3B;AAA+B,KAAhE,CAFD,CAAP;AAGD;;AAED,EAAA,KAAK,CAAC,GAAD,EAAU;AAAA;AAAA;AACb,UAAM,OAAO;AAAA;AAAA,8BAAG,cAAA,CAAA,mBAAA,CAAoB,GAApB,CAAH,CAAb;;AADa;AAAA;AAEb,WAAO,KAAK,IAAL,CACJ,GADI,CACY,KAAK,WADjB,EAC8B;AAAE,MAAA,MAAM,EAAE,OAAV;AAAmB,MAAA,OAAO,EAAE;AAA5B,KAD9B,EAEJ,IAFI,CAEC,WAAA,CAAA,GAAA,CAAI,CAAC,GAAD,KAAkC;AAAA;AAAA;AAAA;AAAA,kBAAK,0BAAL,CAAgC,GAAhC;AAAoC,KAA1E,CAFD,CAAP;AAGD;;AAED,EAAA,MAAM,CAAC,EAAD,EAAW;AAAA;AAAA;AAAA;AACf,WAAO,KAAK,IAAL,CAAU,MAAV,CAAiB,GAAG,KAAK,WAAW,IAAI,EAAE,EAA1C,EAA8C;AAAE,MAAA,OAAO,EAAE;AAAX,KAA9C,CAAP;AACD;;AAED,EAAA,+BAA+B,CAAC,iBAAD,EAAgC,GAAG,eAAnC,EAAmF;AAAA;AAAA;AAChH,UAAM,QAAQ;AAAA;AAAA,8BAAe,eAAe,CAAC,MAAhB,CAAuB,WAAA,CAAA,SAAvB,CAAf,CAAd;;AADgH;AAAA;;AAEhH,QAAI,QAAQ,CAAC,MAAT,GAAkB,CAAtB,EAAyB;AAAA;AAAA;AACvB,YAAM,4BAA4B;AAAA;AAAA,gCAAG,iBAAiB,CAAC,GAAlB,CAAsB,CAAA,WAAW,KAAI;AAAA;AAAA;AAAA;AAAA,eAAA,eAAA,CAAA,oBAAA,CAAqB,WAArB;AAAkC,OAAvE,CAAH,CAAlC;AACA,YAAM,aAAa;AAAA;AAAA,gCAAG,QAAQ,CAAC,MAAT,CAAgB,CAAA,WAAW,KAAG;AAAA;AAAA;AAClD,cAAM,iBAAiB;AAAA;AAAA,kCAAG,eAAA,CAAA,oBAAA,CAAqB,WAArB,CAAH,CAAvB;;AADkD;AAAA;;AAElD;AAAI;AAAA,oCAAA,iBAAiB,IAAI,IAArB;AAAA;AAAA,oCAA6B,4BAA4B,CAAC,QAA7B,CAAsC,iBAAtC,CAA7B,CAAJ,EAA2F;AAAA;AAAA;AAAA;AACzF,iBAAO,KAAP;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;;AAFkD;AAKlD,QAAA,4BAA4B,CAAC,IAA7B,CAAkC,iBAAlC;;AALkD;AAAA;AAMlD,eAAO,IAAP;AACD,OAPqB,CAAH,CAAnB;;AAFuB;AAAA;AAUvB,aAAO,CAAC,GAAG,aAAJ,EAAmB,GAAG,iBAAtB,CAAP;AACD,KAXD;AAAA;AAAA;AAAA;AAAA;;AAFgH;AAchH,WAAO,iBAAP;AACD;;AAES,EAAA,qBAAqB,CAAC,OAAD,EAAkB;AAAA;AAAA;;;;AAAA;AAAA;AAC/C,WAAO,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,OAAlB,EAA2B;AAChC,MAAA,SAAS,EAAE;AAAA;AAAA,mCAAA,EAAA,GAAA,OAAO,CAAC,SAAR,MAAiB,IAAjB;AAAA;AAAA,kCAAiB,EAAA,KAAA,KAAA,CAAjB;AAAA;AAAA,kCAAiB,KAAA,CAAjB;AAAA;AAAA,kCAAiB,EAAA,CAAE,OAAF,EAAjB,CAAA;AAAA;AAAA,kCAA+B,OAAO,CAAC,SAAR,CAAkB,MAAlB,EAA/B;AAAA;AAAA,kCAA4D,SAA5D,CADqB;AAEhC,MAAA,WAAW,EAAE;AAAA;AAAA,mCAAA,EAAA,GAAA,OAAO,CAAC,WAAR,MAAmB,IAAnB;AAAA;AAAA,kCAAmB,EAAA,KAAA,KAAA,CAAnB;AAAA;AAAA,kCAAmB,KAAA,CAAnB;AAAA;AAAA,kCAAmB,EAAA,CAAE,OAAF,EAAnB,CAAA;AAAA;AAAA,kCAAiC,OAAO,CAAC,WAAR,CAAoB,MAApB,EAAjC;AAAA;AAAA,kCAAgE,SAAhE;AAFmB,KAA3B,CAAP;AAID;;AAES,EAAA,qBAAqB,CAAC,GAAD,EAAwB;AAAA;AAAA;AAAA;;AACrD,QAAI,GAAG,CAAC,IAAR,EAAc;AAAA;AAAA;AAAA;AACZ,MAAA,GAAG,CAAC,IAAJ,CAAS,SAAT,GAAqB,GAAG,CAAC,IAAJ,CAAS,SAAT;AAAA;AAAA,mCAAqB,KAAK,CAAC,GAAG,CAAC,IAAJ,CAAS,SAAV,CAA1B;AAAA;AAAA,mCAAiD,SAAjD,CAArB;;AADY;AAAA;AAEZ,MAAA,GAAG,CAAC,IAAJ,CAAS,WAAT,GAAuB,GAAG,CAAC,IAAJ,CAAS,WAAT;AAAA;AAAA,mCAAuB,KAAK,CAAC,GAAG,CAAC,IAAJ,CAAS,WAAV,CAA5B;AAAA;AAAA,mCAAqD,SAArD,CAAvB;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;;AADqD;AAKrD,WAAO,GAAP;AACD;;AAES,EAAA,0BAA0B,CAAC,GAAD,EAA6B;AAAA;AAAA;AAAA;;AAC/D,QAAI,GAAG,CAAC,IAAR,EAAc;AAAA;AAAA;AAAA;AACZ,MAAA,GAAG,CAAC,IAAJ,CAAS,OAAT,CAAiB,CAAC,OAAD,KAAsB;AAAA;AAAA;AAAA;AACrC,QAAA,OAAO,CAAC,SAAR,GAAoB,OAAO,CAAC,SAAR;AAAA;AAAA,qCAAoB,KAAK,CAAC,OAAO,CAAC,SAAT,CAAzB;AAAA;AAAA,qCAA+C,SAA/C,CAApB;;AADqC;AAAA;AAErC,QAAA,OAAO,CAAC,WAAR,GAAsB,OAAO,CAAC,WAAR;AAAA;AAAA,qCAAsB,KAAK,CAAC,OAAO,CAAC,WAAT,CAA3B;AAAA;AAAA,qCAAmD,SAAnD,CAAtB;AACD,OAHD;AAID,KALD;AAAA;AAAA;AAAA;AAAA;;AAD+D;AAO/D,WAAO,GAAP;AACD;;AAnFwB,C;;;;;;;;;;UAdlB,MAAA,CAAA;;UAMA,4BAAA,CAAA;;;;;;AAQI,cAAc,GAAA,OAAA,CAAA,UAAA,CAAA,CAD1B,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CAC0B,E,yCAGG,MAAA,CAAA,U,EAAgD,4BAAA,CAAA,wB,EAHnD,CAAA,EAAd,cAAc,CAAd;;;;AAAA,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as dayjs from 'dayjs';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { IBooking, getBookingIdentifier } from '../booking.model';\n\nexport type EntityResponseType = HttpResponse<IBooking>;\nexport type EntityArrayResponseType = HttpResponse<IBooking[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class BookingService {\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/bookings');\n\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\n\n  create(booking: IBooking): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(booking);\n    return this.http\n      .post<IBooking>(this.resourceUrl, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  update(booking: IBooking): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(booking);\n    return this.http\n      .put<IBooking>(`${this.resourceUrl}/${getBookingIdentifier(booking) as number}`, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  partialUpdate(booking: IBooking): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(booking);\n    return this.http\n      .patch<IBooking>(`${this.resourceUrl}/${getBookingIdentifier(booking) as number}`, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http\n      .get<IBooking>(`${this.resourceUrl}/${id}`, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http\n      .get<IBooking[]>(this.resourceUrl, { params: options, observe: 'response' })\n      .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addBookingToCollectionIfMissing(bookingCollection: IBooking[], ...bookingsToCheck: (IBooking | null | undefined)[]): IBooking[] {\n    const bookings: IBooking[] = bookingsToCheck.filter(isPresent);\n    if (bookings.length > 0) {\n      const bookingCollectionIdentifiers = bookingCollection.map(bookingItem => getBookingIdentifier(bookingItem)!);\n      const bookingsToAdd = bookings.filter(bookingItem => {\n        const bookingIdentifier = getBookingIdentifier(bookingItem);\n        if (bookingIdentifier == null || bookingCollectionIdentifiers.includes(bookingIdentifier)) {\n          return false;\n        }\n        bookingCollectionIdentifiers.push(bookingIdentifier);\n        return true;\n      });\n      return [...bookingsToAdd, ...bookingCollection];\n    }\n    return bookingCollection;\n  }\n\n  protected convertDateFromClient(booking: IBooking): IBooking {\n    return Object.assign({}, booking, {\n      eventDate: booking.eventDate?.isValid() ? booking.eventDate.toJSON() : undefined,\n      createdDate: booking.createdDate?.isValid() ? booking.createdDate.toJSON() : undefined,\n    });\n  }\n\n  protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n    if (res.body) {\n      res.body.eventDate = res.body.eventDate ? dayjs(res.body.eventDate) : undefined;\n      res.body.createdDate = res.body.createdDate ? dayjs(res.body.createdDate) : undefined;\n    }\n    return res;\n  }\n\n  protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n    if (res.body) {\n      res.body.forEach((booking: IBooking) => {\n        booking.eventDate = booking.eventDate ? dayjs(booking.eventDate) : undefined;\n        booking.createdDate = booking.createdDate ? dayjs(booking.createdDate) : undefined;\n      });\n    }\n    return res;\n  }\n}\n"]}