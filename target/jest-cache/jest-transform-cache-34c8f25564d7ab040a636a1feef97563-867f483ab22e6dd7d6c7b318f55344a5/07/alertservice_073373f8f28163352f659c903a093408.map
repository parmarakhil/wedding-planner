{"version":3,"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/core/util/alert.service.ts"],"names":[],"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","sourcesContent":["import { Injectable, SecurityContext, NgZone } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nexport type AlertType = 'success' | 'danger' | 'warning' | 'info';\n\nexport interface Alert {\n  id?: number;\n  type: AlertType;\n  message?: string;\n  timeout?: number;\n  toast?: boolean;\n  position?: string;\n  close?: (alerts: Alert[]) => void;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlertService {\n  timeout = 5000;\n  toast = false;\n  position = 'top right';\n\n  // unique id for each alert. Starts from 0.\n  private alertId = 0;\n  private alerts: Alert[] = [];\n\n  constructor(private sanitizer: DomSanitizer, private ngZone: NgZone) {}\n\n  clear(): void {\n    this.alerts = [];\n  }\n\n  get(): Alert[] {\n    return this.alerts;\n  }\n\n  /**\n   * Adds alert to alerts array and returns added alert.\n   * @param alert      Alert to add. If `timeout`, `toast` or `position` is missing then applying default value.\n   * @param extAlerts  If missing then adding `alert` to `AlertService` internal array and alerts can be retrieved by `get()`.\n   *                   Else adding `alert` to `extAlerts`.\n   * @returns  Added alert\n   */\n  addAlert(alert: Alert, extAlerts?: Alert[]): Alert {\n    alert.id = this.alertId++;\n\n    alert.message = this.sanitizer.sanitize(SecurityContext.HTML, alert.message ?? '') ?? '';\n    alert.timeout = alert.timeout ?? this.timeout;\n    alert.toast = alert.toast ?? this.toast;\n    alert.position = alert.position ?? this.position;\n    alert.close = (alertsArray: Alert[]) => this.closeAlert(alert.id!, alertsArray);\n\n    (extAlerts ?? this.alerts).push(alert);\n\n    if (alert.timeout > 0) {\n      // Workaround protractor waiting for setTimeout.\n      // Reference https://www.protractortest.org/#/timeouts\n      this.ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.ngZone.run(() => {\n            this.closeAlert(alert.id!, extAlerts ?? this.alerts);\n          });\n        }, alert.timeout);\n      });\n    }\n\n    return alert;\n  }\n\n  private closeAlert(alertId: number, extAlerts?: Alert[]): void {\n    const alerts = extAlerts ?? this.alerts;\n    const alertIndex = alerts.map(alert => alert.id).indexOf(alertId);\n    // if found alert then remove\n    if (alertIndex >= 0) {\n      alerts.splice(alertIndex, 1);\n    }\n  }\n}\n"]}