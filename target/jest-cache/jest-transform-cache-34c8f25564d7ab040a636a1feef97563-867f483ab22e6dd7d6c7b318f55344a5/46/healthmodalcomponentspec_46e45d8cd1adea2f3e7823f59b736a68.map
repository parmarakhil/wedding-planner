{"file":"/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/admin/health/modal/health-modal.component.spec.ts","mappings":";;AAAA,mDAAgF;AAChF,0DAAuE;AACvE,6DAA4D;AAE5D,qEAAgE;AAEhE,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;QACpC,IAAI,IAA0B,CAAC;QAC/B,IAAI,OAA+C,CAAC;QACpD,IAAI,eAA+B,CAAC;QAEpC,UAAU,CACR,sBAAY,CAAC,GAAG,EAAE;YAChB,iBAAO,CAAC,sBAAsB,CAAC;gBAC7B,OAAO,EAAE,CAAC,iCAAuB,CAAC;gBAClC,YAAY,EAAE,CAAC,6CAAoB,CAAC;gBACpC,SAAS,EAAE,CAAC,6BAAc,CAAC;aAC5B,CAAC;iBACC,gBAAgB,CAAC,6CAAoB,EAAE,EAAE,CAAC;iBAC1C,iBAAiB,EAAE,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;QAEF,UAAU,CAAC,GAAG,EAAE;YACd,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,6CAAoB,CAAC,CAAC;YACxD,IAAI,GAAG,OAAO,CAAC,iBAAiB,CAAC;YACjC,eAAe,GAAG,iBAAO,CAAC,MAAM,CAAC,6BAAc,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;YAC7B,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;gBACvC,QAAQ;gBACR,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;gBAExB,OAAO;gBACP,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;gBAExD,OAAO;gBACP,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;gBACpC,QAAQ;gBACR,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;gBAExB,OAAO;gBACP,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;gBAE9C,OAAO;gBACP,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE;gBACpE,QAAQ;gBACR,IAAI,CAAC,MAAM,GAAG;oBACZ,GAAG,EAAE,WAAW;oBAChB,KAAK,EAAE;wBACL,MAAM,EAAE,IAAI;qBACb;iBACF,CAAC;gBAEF,OAAO;gBACP,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;gBAE9C,OAAO;gBACP,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE;gBACpE,QAAQ;gBACR,IAAI,CAAC,MAAM,GAAG;oBACZ,GAAG,EAAE,WAAW;oBAChB,KAAK,EAAE;wBACL,MAAM,EAAE,IAAI;qBACb;iBACF,CAAC;gBAEF,OAAO;gBACP,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;gBAE9C,OAAO;gBACP,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;gBACpC,QAAQ;gBACR,IAAI,CAAC,MAAM,GAAG;oBACZ,GAAG,EAAE,MAAM;oBACX,KAAK,EAAE;wBACL,MAAM,EAAE,IAAI;qBACb;iBACF,CAAC;gBAEF,OAAO;gBACP,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBAExC,OAAO;gBACP,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;YACvB,EAAE,CAAC,kDAAkD,EAAE,GAAG,EAAE;gBAC1D,QAAQ;gBACR,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;gBAEnD,OAAO;gBACP,IAAI,CAAC,OAAO,EAAE,CAAC;gBAEf,OAAO;gBACP,MAAM,CAAC,GAAG,CAAC,CAAC,gBAAgB,EAAE,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/admin/health/modal/health-modal.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed, waitForAsync } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { HealthModalComponent } from './health-modal.component';\n\ndescribe('Component Tests', () => {\n  describe('HealthModalComponent', () => {\n    let comp: HealthModalComponent;\n    let fixture: ComponentFixture<HealthModalComponent>;\n    let mockActiveModal: NgbActiveModal;\n\n    beforeEach(\n      waitForAsync(() => {\n        TestBed.configureTestingModule({\n          imports: [HttpClientTestingModule],\n          declarations: [HealthModalComponent],\n          providers: [NgbActiveModal],\n        })\n          .overrideTemplate(HealthModalComponent, '')\n          .compileComponents();\n      })\n    );\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(HealthModalComponent);\n      comp = fixture.componentInstance;\n      mockActiveModal = TestBed.inject(NgbActiveModal);\n    });\n\n    describe('readableValue', () => {\n      it('should return stringify value', () => {\n        // GIVEN\n        comp.health = undefined;\n\n        // WHEN\n        const result = comp.readableValue({ name: 'jhipster' });\n\n        // THEN\n        expect(result).toEqual('{\"name\":\"jhipster\"}');\n      });\n\n      it('should return string value', () => {\n        // GIVEN\n        comp.health = undefined;\n\n        // WHEN\n        const result = comp.readableValue('jhipster');\n\n        // THEN\n        expect(result).toEqual('jhipster');\n      });\n\n      it('should return storage space in an human readable unit (GB)', () => {\n        // GIVEN\n        comp.health = {\n          key: 'diskSpace',\n          value: {\n            status: 'UP',\n          },\n        };\n\n        // WHEN\n        const result = comp.readableValue(1073741825);\n\n        // THEN\n        expect(result).toEqual('1.00 GB');\n      });\n\n      it('should return storage space in an human readable unit (MB)', () => {\n        // GIVEN\n        comp.health = {\n          key: 'diskSpace',\n          value: {\n            status: 'UP',\n          },\n        };\n\n        // WHEN\n        const result = comp.readableValue(1073741824);\n\n        // THEN\n        expect(result).toEqual('1024.00 MB');\n      });\n\n      it('should return string value', () => {\n        // GIVEN\n        comp.health = {\n          key: 'mail',\n          value: {\n            status: 'UP',\n          },\n        };\n\n        // WHEN\n        const result = comp.readableValue(1234);\n\n        // THEN\n        expect(result).toEqual('1234');\n      });\n    });\n\n    describe('dismiss', () => {\n      it('should call dismiss when dismiss modal is called', () => {\n        // GIVEN\n        const spy = jest.spyOn(mockActiveModal, 'dismiss');\n\n        // WHEN\n        comp.dismiss();\n\n        // THEN\n        expect(spy).toHaveBeenCalled();\n      });\n    });\n  });\n});\n"],"version":3}