f2b74cd80413e584b72a1290e62efd4a
"use strict";

/* istanbul ignore next */
function cov_e4jp9cuqy() {
  var path = "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/admin/metrics/metrics.model.ts";
  var hash = "ff7ed717cf109b3544bc64e00daa7bee8e0d34fb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/admin/metrics/metrics.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 50
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 11,
          column: 65
        }
      },
      "3": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "4": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 30
        }
      },
      "5": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "6": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "7": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 36
        }
      },
      "8": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 20,
          column: 68
        }
      },
      "9": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "10": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 50
        }
      },
      "11": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 39
        }
      },
      "12": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 39
        }
      },
      "13": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 31
        }
      },
      "14": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 45
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 1
          },
          end: {
            line: 5,
            column: 2
          }
        },
        loc: {
          start: {
            line: 5,
            column: 23
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 1
          },
          end: {
            line: 13,
            column: 2
          }
        },
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 16
          },
          end: {
            line: 11,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 16
          },
          end: {
            line: 11,
            column: 34
          }
        }, {
          start: {
            line: 11,
            column: 39
          },
          end: {
            line: 11,
            column: 62
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 17
          },
          end: {
            line: 20,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 17
          },
          end: {
            line: 20,
            column: 36
          }
        }, {
          start: {
            line: 20,
            column: 41
          },
          end: {
            line: 20,
            column: 65
          }
        }],
        line: 20
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/admin/metrics/metrics.model.ts",
      mappings: ";;;AAkFA,IAAY,UAMX;AAND,WAAY,UAAU;IACpB,2BAAa,CAAA;IACb,yBAAW,CAAA;IACX,yBAAW,CAAA;IACX,6BAAe,CAAA;IACf,+BAAiB,CAAA;AACnB,CAAC,EANW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAMrB;AA+DD,IAAY,WAOX;AAPD,WAAY,WAAW;IACrB,oCAAqB,CAAA;IACrB,6CAA8B,CAAA;IAC9B,kCAAmB,CAAA;IACnB,kCAAmB,CAAA;IACnB,0BAAW,CAAA;IACX,wCAAyB,CAAA;AAC3B,CAAC,EAPW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAOtB",
      names: [],
      sources: ["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/admin/metrics/metrics.model.ts"],
      sourcesContent: ["export interface Metrics {\n  jvm: { [key: string]: JvmMetrics };\n  databases: Databases;\n  'http.server.requests': HttpServerRequests;\n  cache: { [key: string]: CacheMetrics };\n  garbageCollector: GarbageCollector;\n  services: Services;\n  processMetrics: ProcessMetrics;\n}\n\nexport interface JvmMetrics {\n  committed: number;\n  max: number;\n  used: number;\n}\n\nexport interface Databases {\n  min: Value;\n  idle: Value;\n  max: Value;\n  usage: MetricsWithPercentile;\n  pending: Value;\n  active: Value;\n  acquire: MetricsWithPercentile;\n  creation: MetricsWithPercentile;\n  connections: Value;\n}\n\nexport interface Value {\n  value: number;\n}\n\nexport interface MetricsWithPercentile {\n  '0.0': number;\n  '1.0': number;\n  max: number;\n  totalTime: number;\n  mean: number;\n  '0.5': number;\n  count: number;\n  '0.99': number;\n  '0.75': number;\n  '0.95': number;\n}\n\nexport interface HttpServerRequests {\n  all: {\n    count: number;\n  };\n  percode: { [key: string]: MaxMeanCount };\n}\n\nexport interface MaxMeanCount {\n  max: number;\n  mean: number;\n  count: number;\n}\n\nexport interface CacheMetrics {\n  'cache.gets.miss': number;\n  'cache.puts': number;\n  'cache.gets.hit': number;\n  'cache.removals': number;\n  'cache.evictions': number;\n}\n\nexport interface GarbageCollector {\n  'jvm.gc.max.data.size': number;\n  'jvm.gc.pause': MetricsWithPercentile;\n  'jvm.gc.memory.promoted': number;\n  'jvm.gc.memory.allocated': number;\n  classesLoaded: number;\n  'jvm.gc.live.data.size': number;\n  classesUnloaded: number;\n}\n\nexport interface Services {\n  [key: string]: {\n    [key in HttpMethod]?: MaxMeanCount;\n  };\n}\n\nexport enum HttpMethod {\n  Post = 'POST',\n  Get = 'GET',\n  Put = 'PUT',\n  Patch = 'PATCH',\n  Delete = 'DELETE',\n}\n\nexport interface ProcessMetrics {\n  'system.cpu.usage': number;\n  'system.cpu.count': number;\n  'system.load.average.1m'?: number;\n  'process.cpu.usage': number;\n  'process.files.max'?: number;\n  'process.files.open'?: number;\n  'process.start.time': number;\n  'process.uptime': number;\n}\n\nexport interface ThreadDump {\n  threads: Thread[];\n}\n\nexport interface Thread {\n  threadName: string;\n  threadId: number;\n  blockedTime: number;\n  blockedCount: number;\n  waitedTime: number;\n  waitedCount: number;\n  lockName: string | null;\n  lockOwnerId: number;\n  lockOwnerName: string | null;\n  daemon: boolean;\n  inNative: boolean;\n  suspended: boolean;\n  threadState: ThreadState;\n  priority: number;\n  stackTrace: StackTrace[];\n  lockedMonitors: LockedMonitor[];\n  lockedSynchronizers: string[];\n  lockInfo: LockInfo | null;\n  // custom field for showing-hiding thread dump\n  showThreadDump?: boolean;\n}\n\nexport interface LockInfo {\n  className: string;\n  identityHashCode: number;\n}\n\nexport interface LockedMonitor {\n  className: string;\n  identityHashCode: number;\n  lockedStackDepth: number;\n  lockedStackFrame: StackTrace;\n}\n\nexport interface StackTrace {\n  classLoaderName: string | null;\n  moduleName: string | null;\n  moduleVersion: string | null;\n  methodName: string;\n  fileName: string;\n  lineNumber: number;\n  className: string;\n  nativeMethod: boolean;\n}\n\nexport enum ThreadState {\n  Runnable = 'RUNNABLE',\n  TimedWaiting = 'TIMED_WAITING',\n  Waiting = 'WAITING',\n  Blocked = 'BLOCKED',\n  New = 'NEW',\n  Terminated = 'TERMINATED',\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ff7ed717cf109b3544bc64e00daa7bee8e0d34fb"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_e4jp9cuqy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_e4jp9cuqy();
cov_e4jp9cuqy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_e4jp9cuqy().s[1]++;
exports.ThreadState = exports.HttpMethod = void 0;
var HttpMethod;

/* istanbul ignore next */
cov_e4jp9cuqy().s[2]++;

(function (HttpMethod) {
  /* istanbul ignore next */
  cov_e4jp9cuqy().f[0]++;
  cov_e4jp9cuqy().s[3]++;
  HttpMethod["Post"] = "POST";

  /* istanbul ignore next */
  cov_e4jp9cuqy().s[4]++;
  HttpMethod["Get"] = "GET";

  /* istanbul ignore next */
  cov_e4jp9cuqy().s[5]++;
  HttpMethod["Put"] = "PUT";

  /* istanbul ignore next */
  cov_e4jp9cuqy().s[6]++;
  HttpMethod["Patch"] = "PATCH";

  /* istanbul ignore next */
  cov_e4jp9cuqy().s[7]++;
  HttpMethod["Delete"] = "DELETE";
})(HttpMethod =
/* istanbul ignore next */
(cov_e4jp9cuqy().b[0][0]++, exports.HttpMethod) ||
/* istanbul ignore next */
(cov_e4jp9cuqy().b[0][1]++, exports.HttpMethod = {}));

var ThreadState;

/* istanbul ignore next */
cov_e4jp9cuqy().s[8]++;

(function (ThreadState) {
  /* istanbul ignore next */
  cov_e4jp9cuqy().f[1]++;
  cov_e4jp9cuqy().s[9]++;
  ThreadState["Runnable"] = "RUNNABLE";

  /* istanbul ignore next */
  cov_e4jp9cuqy().s[10]++;
  ThreadState["TimedWaiting"] = "TIMED_WAITING";

  /* istanbul ignore next */
  cov_e4jp9cuqy().s[11]++;
  ThreadState["Waiting"] = "WAITING";

  /* istanbul ignore next */
  cov_e4jp9cuqy().s[12]++;
  ThreadState["Blocked"] = "BLOCKED";

  /* istanbul ignore next */
  cov_e4jp9cuqy().s[13]++;
  ThreadState["New"] = "NEW";

  /* istanbul ignore next */
  cov_e4jp9cuqy().s[14]++;
  ThreadState["Terminated"] = "TERMINATED";
})(ThreadState =
/* istanbul ignore next */
(cov_e4jp9cuqy().b[1][0]++, exports.ThreadState) ||
/* istanbul ignore next */
(cov_e4jp9cuqy().b[1][1]++, exports.ThreadState = {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ha2hpbHNpbmdoL0Rlc2t0b3AvUHJvamVjdHMvd2VkZGluZy9zcmMvbWFpbi93ZWJhcHAvYXBwL2FkbWluL21ldHJpY3MvbWV0cmljcy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEwSkU7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeEVGLElBQVksVUFBWjs7Ozs7QUFBQSxDQUFBLFVBQVksVUFBWixFQUFzQjtBQUFBO0FBQUE7QUFBQTtBQUNwQixFQUFBLFVBQUEsQ0FBQSxNQUFBLENBQUEsR0FBQSxNQUFBOztBQURvQjtBQUFBO0FBRXBCLEVBQUEsVUFBQSxDQUFBLEtBQUEsQ0FBQSxHQUFBLEtBQUE7O0FBRm9CO0FBQUE7QUFHcEIsRUFBQSxVQUFBLENBQUEsS0FBQSxDQUFBLEdBQUEsS0FBQTs7QUFIb0I7QUFBQTtBQUlwQixFQUFBLFVBQUEsQ0FBQSxPQUFBLENBQUEsR0FBQSxPQUFBOztBQUpvQjtBQUFBO0FBS3BCLEVBQUEsVUFBQSxDQUFBLFFBQUEsQ0FBQSxHQUFBLFFBQUE7QUFDRCxDQU5ELEVBQVksVUFBVTtBQUFWO0FBQUEsNEJBQUEsT0FBQSxDQUFBLFVBQUE7QUFBQTtBQUFBLDRCQUFBLE9BQUEsQ0FBQSxVQUFBLEdBQVUsRUFBVixDQUFaOztBQXFFQSxJQUFZLFdBQVo7Ozs7O0FBQUEsQ0FBQSxVQUFZLFdBQVosRUFBdUI7QUFBQTtBQUFBO0FBQUE7QUFDckIsRUFBQSxXQUFBLENBQUEsVUFBQSxDQUFBLEdBQUEsVUFBQTs7QUFEcUI7QUFBQTtBQUVyQixFQUFBLFdBQUEsQ0FBQSxjQUFBLENBQUEsR0FBQSxlQUFBOztBQUZxQjtBQUFBO0FBR3JCLEVBQUEsV0FBQSxDQUFBLFNBQUEsQ0FBQSxHQUFBLFNBQUE7O0FBSHFCO0FBQUE7QUFJckIsRUFBQSxXQUFBLENBQUEsU0FBQSxDQUFBLEdBQUEsU0FBQTs7QUFKcUI7QUFBQTtBQUtyQixFQUFBLFdBQUEsQ0FBQSxLQUFBLENBQUEsR0FBQSxLQUFBOztBQUxxQjtBQUFBO0FBTXJCLEVBQUEsV0FBQSxDQUFBLFlBQUEsQ0FBQSxHQUFBLFlBQUE7QUFDRCxDQVBELEVBQVksV0FBVztBQUFYO0FBQUEsNEJBQUEsT0FBQSxDQUFBLFdBQUE7QUFBQTtBQUFBLDRCQUFBLE9BQUEsQ0FBQSxXQUFBLEdBQVcsRUFBWCxDQUFaIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBNZXRyaWNzIHtcbiAganZtOiB7IFtrZXk6IHN0cmluZ106IEp2bU1ldHJpY3MgfTtcbiAgZGF0YWJhc2VzOiBEYXRhYmFzZXM7XG4gICdodHRwLnNlcnZlci5yZXF1ZXN0cyc6IEh0dHBTZXJ2ZXJSZXF1ZXN0cztcbiAgY2FjaGU6IHsgW2tleTogc3RyaW5nXTogQ2FjaGVNZXRyaWNzIH07XG4gIGdhcmJhZ2VDb2xsZWN0b3I6IEdhcmJhZ2VDb2xsZWN0b3I7XG4gIHNlcnZpY2VzOiBTZXJ2aWNlcztcbiAgcHJvY2Vzc01ldHJpY3M6IFByb2Nlc3NNZXRyaWNzO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEp2bU1ldHJpY3Mge1xuICBjb21taXR0ZWQ6IG51bWJlcjtcbiAgbWF4OiBudW1iZXI7XG4gIHVzZWQ6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBEYXRhYmFzZXMge1xuICBtaW46IFZhbHVlO1xuICBpZGxlOiBWYWx1ZTtcbiAgbWF4OiBWYWx1ZTtcbiAgdXNhZ2U6IE1ldHJpY3NXaXRoUGVyY2VudGlsZTtcbiAgcGVuZGluZzogVmFsdWU7XG4gIGFjdGl2ZTogVmFsdWU7XG4gIGFjcXVpcmU6IE1ldHJpY3NXaXRoUGVyY2VudGlsZTtcbiAgY3JlYXRpb246IE1ldHJpY3NXaXRoUGVyY2VudGlsZTtcbiAgY29ubmVjdGlvbnM6IFZhbHVlO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFZhbHVlIHtcbiAgdmFsdWU6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNZXRyaWNzV2l0aFBlcmNlbnRpbGUge1xuICAnMC4wJzogbnVtYmVyO1xuICAnMS4wJzogbnVtYmVyO1xuICBtYXg6IG51bWJlcjtcbiAgdG90YWxUaW1lOiBudW1iZXI7XG4gIG1lYW46IG51bWJlcjtcbiAgJzAuNSc6IG51bWJlcjtcbiAgY291bnQ6IG51bWJlcjtcbiAgJzAuOTknOiBudW1iZXI7XG4gICcwLjc1JzogbnVtYmVyO1xuICAnMC45NSc6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBIdHRwU2VydmVyUmVxdWVzdHMge1xuICBhbGw6IHtcbiAgICBjb3VudDogbnVtYmVyO1xuICB9O1xuICBwZXJjb2RlOiB7IFtrZXk6IHN0cmluZ106IE1heE1lYW5Db3VudCB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE1heE1lYW5Db3VudCB7XG4gIG1heDogbnVtYmVyO1xuICBtZWFuOiBudW1iZXI7XG4gIGNvdW50OiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2FjaGVNZXRyaWNzIHtcbiAgJ2NhY2hlLmdldHMubWlzcyc6IG51bWJlcjtcbiAgJ2NhY2hlLnB1dHMnOiBudW1iZXI7XG4gICdjYWNoZS5nZXRzLmhpdCc6IG51bWJlcjtcbiAgJ2NhY2hlLnJlbW92YWxzJzogbnVtYmVyO1xuICAnY2FjaGUuZXZpY3Rpb25zJzogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEdhcmJhZ2VDb2xsZWN0b3Ige1xuICAnanZtLmdjLm1heC5kYXRhLnNpemUnOiBudW1iZXI7XG4gICdqdm0uZ2MucGF1c2UnOiBNZXRyaWNzV2l0aFBlcmNlbnRpbGU7XG4gICdqdm0uZ2MubWVtb3J5LnByb21vdGVkJzogbnVtYmVyO1xuICAnanZtLmdjLm1lbW9yeS5hbGxvY2F0ZWQnOiBudW1iZXI7XG4gIGNsYXNzZXNMb2FkZWQ6IG51bWJlcjtcbiAgJ2p2bS5nYy5saXZlLmRhdGEuc2l6ZSc6IG51bWJlcjtcbiAgY2xhc3Nlc1VubG9hZGVkOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2VydmljZXMge1xuICBba2V5OiBzdHJpbmddOiB7XG4gICAgW2tleSBpbiBIdHRwTWV0aG9kXT86IE1heE1lYW5Db3VudDtcbiAgfTtcbn1cblxuZXhwb3J0IGVudW0gSHR0cE1ldGhvZCB7XG4gIFBvc3QgPSAnUE9TVCcsXG4gIEdldCA9ICdHRVQnLFxuICBQdXQgPSAnUFVUJyxcbiAgUGF0Y2ggPSAnUEFUQ0gnLFxuICBEZWxldGUgPSAnREVMRVRFJyxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQcm9jZXNzTWV0cmljcyB7XG4gICdzeXN0ZW0uY3B1LnVzYWdlJzogbnVtYmVyO1xuICAnc3lzdGVtLmNwdS5jb3VudCc6IG51bWJlcjtcbiAgJ3N5c3RlbS5sb2FkLmF2ZXJhZ2UuMW0nPzogbnVtYmVyO1xuICAncHJvY2Vzcy5jcHUudXNhZ2UnOiBudW1iZXI7XG4gICdwcm9jZXNzLmZpbGVzLm1heCc/OiBudW1iZXI7XG4gICdwcm9jZXNzLmZpbGVzLm9wZW4nPzogbnVtYmVyO1xuICAncHJvY2Vzcy5zdGFydC50aW1lJzogbnVtYmVyO1xuICAncHJvY2Vzcy51cHRpbWUnOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGhyZWFkRHVtcCB7XG4gIHRocmVhZHM6IFRocmVhZFtdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRocmVhZCB7XG4gIHRocmVhZE5hbWU6IHN0cmluZztcbiAgdGhyZWFkSWQ6IG51bWJlcjtcbiAgYmxvY2tlZFRpbWU6IG51bWJlcjtcbiAgYmxvY2tlZENvdW50OiBudW1iZXI7XG4gIHdhaXRlZFRpbWU6IG51bWJlcjtcbiAgd2FpdGVkQ291bnQ6IG51bWJlcjtcbiAgbG9ja05hbWU6IHN0cmluZyB8IG51bGw7XG4gIGxvY2tPd25lcklkOiBudW1iZXI7XG4gIGxvY2tPd25lck5hbWU6IHN0cmluZyB8IG51bGw7XG4gIGRhZW1vbjogYm9vbGVhbjtcbiAgaW5OYXRpdmU6IGJvb2xlYW47XG4gIHN1c3BlbmRlZDogYm9vbGVhbjtcbiAgdGhyZWFkU3RhdGU6IFRocmVhZFN0YXRlO1xuICBwcmlvcml0eTogbnVtYmVyO1xuICBzdGFja1RyYWNlOiBTdGFja1RyYWNlW107XG4gIGxvY2tlZE1vbml0b3JzOiBMb2NrZWRNb25pdG9yW107XG4gIGxvY2tlZFN5bmNocm9uaXplcnM6IHN0cmluZ1tdO1xuICBsb2NrSW5mbzogTG9ja0luZm8gfCBudWxsO1xuICAvLyBjdXN0b20gZmllbGQgZm9yIHNob3dpbmctaGlkaW5nIHRocmVhZCBkdW1wXG4gIHNob3dUaHJlYWREdW1wPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMb2NrSW5mbyB7XG4gIGNsYXNzTmFtZTogc3RyaW5nO1xuICBpZGVudGl0eUhhc2hDb2RlOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9ja2VkTW9uaXRvciB7XG4gIGNsYXNzTmFtZTogc3RyaW5nO1xuICBpZGVudGl0eUhhc2hDb2RlOiBudW1iZXI7XG4gIGxvY2tlZFN0YWNrRGVwdGg6IG51bWJlcjtcbiAgbG9ja2VkU3RhY2tGcmFtZTogU3RhY2tUcmFjZTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTdGFja1RyYWNlIHtcbiAgY2xhc3NMb2FkZXJOYW1lOiBzdHJpbmcgfCBudWxsO1xuICBtb2R1bGVOYW1lOiBzdHJpbmcgfCBudWxsO1xuICBtb2R1bGVWZXJzaW9uOiBzdHJpbmcgfCBudWxsO1xuICBtZXRob2ROYW1lOiBzdHJpbmc7XG4gIGZpbGVOYW1lOiBzdHJpbmc7XG4gIGxpbmVOdW1iZXI6IG51bWJlcjtcbiAgY2xhc3NOYW1lOiBzdHJpbmc7XG4gIG5hdGl2ZU1ldGhvZDogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGVudW0gVGhyZWFkU3RhdGUge1xuICBSdW5uYWJsZSA9ICdSVU5OQUJMRScsXG4gIFRpbWVkV2FpdGluZyA9ICdUSU1FRF9XQUlUSU5HJyxcbiAgV2FpdGluZyA9ICdXQUlUSU5HJyxcbiAgQmxvY2tlZCA9ICdCTE9DS0VEJyxcbiAgTmV3ID0gJ05FVycsXG4gIFRlcm1pbmF0ZWQgPSAnVEVSTUlOQVRFRCcsXG59XG4iXX0=