{"version":3,"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/shared/auth/has-any-authority.directive.ts"],"names":[],"mappingseAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,MAAA,CAAA,CAAA;AACA,MAAA,WAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AAEA,MAAA,iBAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,+BAAA,CAAA,CAAA;AAEA;;;;;;;;;;AAUG;;;;IAIU,wBAAwB,GAAA,MAAxB,wBAAwB,CAAA;AAKnC,EAAA,WAAA,CAAoB,cAApB,EAA4D,WAA5D,EAAmG,gBAAnG,EAAqI;AAAA;AAAA;AAAA;AAAjH,SAAA,cAAA,GAAA,cAAA;;AAAiH;AAAA;AAAzE,SAAA,WAAA,GAAA,WAAA;;AAAyE;AAAA;AAAlC,SAAA,gBAAA,GAAA,gBAAA;;AAAkC;AAAA;AAFpH,SAAA,QAAA,GAAW,IAAI,MAAA,CAAA,OAAJ,EAAX;AAEwH;;AAGnH,MAAlB,kBAAkB,CAAC,KAAD,EAAyB;AAAA;AAAA;AAAA;AAC7C,SAAK,WAAL,GAAmB,KAAnB;;AAD6C;AAAA;AAE7C,SAAK,UAAL,GAF6C,CAG7C;;AAH6C;AAAA;AAI7C,SAAK,cAAL,CACG,sBADH,GAEG,IAFH,CAEQ,WAAA,CAAA,SAAA,CAAU,KAAK,QAAf,CAFR,EAGG,SAHH,CAGa,MAAK;AAAA;AAAA;AAAA;AACd,WAAK,UAAL;AACD,KALH;AAMD;;AAED,EAAA,WAAW,GAAA;AAAA;AAAA;AAAA;AACT,SAAK,QAAL,CAAc,IAAd;;AADS;AAAA;AAET,SAAK,QAAL,CAAc,QAAd;AACD;;AAEO,EAAA,UAAU,GAAA;AAAA;AAAA;AAChB,UAAM,eAAe;AAAA;AAAA,+BAAG,KAAK,cAAL,CAAoB,eAApB,CAAoC,KAAK,WAAzC,CAAH,CAArB;;AADgB;AAAA;AAEhB,SAAK,gBAAL,CAAsB,KAAtB;;AAFgB;AAAA;;AAGhB,QAAI,eAAJ,EAAqB;AAAA;AAAA;AAAA;AACnB,WAAK,gBAAL,CAAsB,kBAAtB,CAAyC,KAAK,WAA9C;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAGD;;AA/BkC,C;;;;;;;;;;UAhB5B,iBAAA,CAAA;;UAJkB,MAAA,CAAA;;UAAa,MAAA,CAAA;;;;;;;;UA2BrC,MAAA,CAAA;;;;;;AAPU,wBAAwB,GAAA,OAAA,CAAA,UAAA,CAAA,CAHpC,MAAA,CAAA,SAAA,CAAU;AACT,EAAA,QAAQ,EAAE;AADD,CAAV,CAGoC,E,yCAKC,iBAAA,CAAA,c,EAAqC,MAAA,CAAA,W,EAA4C,MAAA,CAAA,gB,EALlF,CAAA,EAAxB,wBAAwB,CAAxB;;;;AAAA,OAAA,CAAA,wBAAA,GAAA,wBAAA","sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { AccountService } from 'app/core/auth/account.service';\n\n/**\n * @whatItDoes Conditionally includes an HTML element if current user has any\n * of the authorities passed as the `expression`.\n *\n * @howToUse\n * ```\n *     <some-element *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">...</some-element>\n *\n *     <some-element *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_USER']\">...</some-element>\n * ```\n */\n@Directive({\n  selector: '[jhiHasAnyAuthority]',\n})\nexport class HasAnyAuthorityDirective implements OnDestroy {\n  private authorities!: string | string[];\n\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(private accountService: AccountService, private templateRef: TemplateRef<any>, private viewContainerRef: ViewContainerRef) {}\n\n  @Input()\n  set jhiHasAnyAuthority(value: string | string[]) {\n    this.authorities = value;\n    this.updateView();\n    // Get notified each time authentication state changes.\n    this.accountService\n      .getAuthenticationState()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.updateView();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private updateView(): void {\n    const hasAnyAuthority = this.accountService.hasAnyAuthority(this.authorities);\n    this.viewContainerRef.clear();\n    if (hasAnyAuthority) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n"]}