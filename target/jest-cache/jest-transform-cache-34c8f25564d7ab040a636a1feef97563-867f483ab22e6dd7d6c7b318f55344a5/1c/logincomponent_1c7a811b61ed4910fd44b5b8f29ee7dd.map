{"version":3,"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/login/login.component.ts"],"names":[],"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","sourcesContent":["import { Component, ViewChild, OnInit, AfterViewInit, ElementRef } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { LoginService } from 'app/login/login.service';\nimport { AccountService } from 'app/core/auth/account.service';\n\n@Component({\n  selector: 'jhi-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n  @ViewChild('username', { static: false })\n  username!: ElementRef;\n\n  authenticationError = false;\n\n  loginForm = this.fb.group({\n    username: [null, [Validators.required]],\n    password: [null, [Validators.required]],\n    rememberMe: [false],\n  });\n\n  constructor(\n    private accountService: AccountService,\n    private loginService: LoginService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    // if already authenticated then navigate to home page\n    this.accountService.identity().subscribe(() => {\n      if (this.accountService.isAuthenticated()) {\n        this.router.navigate(['']);\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.username.nativeElement.focus();\n  }\n\n  login(): void {\n    this.loginService\n      .login({\n        username: this.loginForm.get('username')!.value,\n        password: this.loginForm.get('password')!.value,\n        rememberMe: this.loginForm.get('rememberMe')!.value,\n      })\n      .subscribe(\n        () => {\n          this.authenticationError = false;\n          if (!this.router.getCurrentNavigation()) {\n            // There were no routing during login (eg from navigationToStoredUrl)\n            this.router.navigate(['']);\n          }\n        },\n        () => (this.authenticationError = true)\n      );\n  }\n}\n"]}