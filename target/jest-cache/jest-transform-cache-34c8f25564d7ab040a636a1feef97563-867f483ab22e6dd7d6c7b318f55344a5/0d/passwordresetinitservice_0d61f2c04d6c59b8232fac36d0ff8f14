4266163c73e643d1f1cf0cf12f6748b6
"use strict";

/* istanbul ignore next */
function cov_2fsmgugudv() {
  var path = "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/account/password-reset/init/password-reset-init.service.ts";
  var hash = "622c94dfeb0e82cbd571b97cd2a524b7c56719b7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/account/password-reset/init/password-reset-init.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 42
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 37
        },
        end: {
          line: 7,
          column: 90
        }
      },
      "6": {
        start: {
          line: 8,
          column: 31
        },
        end: {
          line: 16,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 65
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 117
        }
      },
      "10": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "11": {
        start: {
          line: 17,
          column: 48
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "12": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 24,
          column: 29
        }
      },
      "13": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 48
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 42
          },
          end: {
            line: 17,
            column: 43
          }
        },
        loc: {
          start: {
            line: 17,
            column: 48
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 17
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/account/password-reset/init/password-reset-init.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAC3C,+CAAkD;AAGlD,2FAAsF;IAGzE,wBAAwB,SAAxB,wBAAwB;IACnC,YAAoB,IAAgB,EAAU,wBAAkD;QAA5E,SAAI,GAAJ,IAAI,CAAY;QAAU,6BAAwB,GAAxB,wBAAwB,CAA0B;IAAG,CAAC;IAEpG,IAAI,CAAC,IAAY;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,iCAAiC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC/G,CAAC;CACF,CAAA;;YAZQ,iBAAU;YAGV,qDAAwB;;AAGpB,wBAAwB;IADpC,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAEP,iBAAU,EAAoC,qDAAwB;GADrF,wBAAwB,CAMpC;AANY,4DAAwB",
      names: [],
      sources: ["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/account/password-reset/init/password-reset-init.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\n\n@Injectable({ providedIn: 'root' })\nexport class PasswordResetInitService {\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\n\n  save(mail: string): Observable<{}> {\n    return this.http.post(this.applicationConfigService.getEndpointFor('api/account/reset-password/init'), mail);\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "622c94dfeb0e82cbd571b97cd2a524b7c56719b7"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fsmgugudv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2fsmgugudv();
cov_2fsmgugudv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2fsmgugudv().s[1]++;
exports.PasswordResetInitService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_2fsmgugudv().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_2fsmgugudv().s[3]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_2fsmgugudv().s[4]++, require("@angular/common/http"));
const application_config_service_1 =
/* istanbul ignore next */
(cov_2fsmgugudv().s[5]++, require("app/core/config/application-config.service"));

/* istanbul ignore next */
cov_2fsmgugudv().s[6]++;
let PasswordResetInitService = class PasswordResetInitService {
  constructor(http, applicationConfigService) {
    /* istanbul ignore next */
    cov_2fsmgugudv().f[0]++;
    cov_2fsmgugudv().s[7]++;
    this.http = http;

    /* istanbul ignore next */
    cov_2fsmgugudv().s[8]++;
    this.applicationConfigService = applicationConfigService;
  }

  save(mail) {
    /* istanbul ignore next */
    cov_2fsmgugudv().f[1]++;
    cov_2fsmgugudv().s[9]++;
    return this.http.post(this.applicationConfigService.getEndpointFor('api/account/reset-password/init'), mail);
  }

};

/* istanbul ignore next */
cov_2fsmgugudv().s[10]++;

PasswordResetInitService.ctorParameters = () => {
  /* istanbul ignore next */
  cov_2fsmgugudv().f[2]++;
  cov_2fsmgugudv().s[11]++;
  return [{
    type: http_1.HttpClient
  }, {
    type: application_config_service_1.ApplicationConfigService
  }];
};

/* istanbul ignore next */
cov_2fsmgugudv().s[12]++;
PasswordResetInitService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient, application_config_service_1.ApplicationConfigService])], PasswordResetInitService);

/* istanbul ignore next */
cov_2fsmgugudv().s[13]++;
exports.PasswordResetInitService = PasswordResetInitService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ha2hpbHNpbmdoL0Rlc2t0b3AvUHJvamVjdHMvd2VkZGluZy9zcmMvbWFpbi93ZWJhcHAvYXBwL2FjY291bnQvcGFzc3dvcmQtcmVzZXQvaW5pdC9wYXNzd29yZC1yZXNldC1pbml0LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWJELE1BQUEsTUFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBO0FBQ0EsTUFBQSxNQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsc0JBQUEsQ0FBQSxDQUFBO0FBR0EsTUFBQSw0QkFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLDRDQUFBLENBQUEsQ0FBQTs7OztJQUdhLHdCQUF3QixHQUFBLE1BQXhCLHdCQUF3QixDQUFBO0FBQ25DLEVBQUEsV0FBQSxDQUFvQixJQUFwQixFQUE4Qyx3QkFBOUMsRUFBZ0c7QUFBQTtBQUFBO0FBQUE7QUFBNUUsU0FBQSxJQUFBLEdBQUEsSUFBQTs7QUFBNEU7QUFBQTtBQUFsRCxTQUFBLHdCQUFBLEdBQUEsd0JBQUE7QUFBc0Q7O0FBRXBHLEVBQUEsSUFBSSxDQUFDLElBQUQsRUFBYTtBQUFBO0FBQUE7QUFBQTtBQUNmLFdBQU8sS0FBSyxJQUFMLENBQVUsSUFBVixDQUFlLEtBQUssd0JBQUwsQ0FBOEIsY0FBOUIsQ0FBNkMsaUNBQTdDLENBQWYsRUFBZ0csSUFBaEcsQ0FBUDtBQUNEOztBQUxrQyxDOzs7Ozs7Ozs7O1VBTjVCLE1BQUEsQ0FBQTs7VUFHQSw0QkFBQSxDQUFBOzs7Ozs7QUFHSSx3QkFBd0IsR0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBRHBDLE1BQUEsQ0FBQSxVQUFBLENBQVc7QUFBRSxFQUFBLFVBQVUsRUFBRTtBQUFkLENBQVgsQ0FDb0MsRSx5Q0FDVCxNQUFBLENBQUEsVSxFQUE4Qyw0QkFBQSxDQUFBLHdCLEVBRHJDLENBQUEsRUFBeEIsd0JBQXdCLENBQXhCOzs7O0FBQUEsT0FBQSxDQUFBLHdCQUFBLEdBQUEsd0JBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBBcHBsaWNhdGlvbkNvbmZpZ1NlcnZpY2UgfSBmcm9tICdhcHAvY29yZS9jb25maWcvYXBwbGljYXRpb24tY29uZmlnLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxuZXhwb3J0IGNsYXNzIFBhc3N3b3JkUmVzZXRJbml0U2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaHR0cDogSHR0cENsaWVudCwgcHJpdmF0ZSBhcHBsaWNhdGlvbkNvbmZpZ1NlcnZpY2U6IEFwcGxpY2F0aW9uQ29uZmlnU2VydmljZSkge31cblxuICBzYXZlKG1haWw6IHN0cmluZyk6IE9ic2VydmFibGU8e30+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLnBvc3QodGhpcy5hcHBsaWNhdGlvbkNvbmZpZ1NlcnZpY2UuZ2V0RW5kcG9pbnRGb3IoJ2FwaS9hY2NvdW50L3Jlc2V0LXBhc3N3b3JkL2luaXQnKSwgbWFpbCk7XG4gIH1cbn1cbiJdfQ==