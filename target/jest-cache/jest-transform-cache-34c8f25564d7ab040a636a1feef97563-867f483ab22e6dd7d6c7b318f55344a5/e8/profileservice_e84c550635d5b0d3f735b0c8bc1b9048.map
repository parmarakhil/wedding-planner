{"version":3,"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/layouts/profiles/profile.service.ts"],"names":[],"mappingsgBQ;;;;;;;;;;;;;;;;;;;;AAhBR,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AACA,MAAA,WAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AAGA,MAAA,4BAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,4CAAA,CAAA,CAAA;;;;IAIa,cAAc,GAAA,MAAd,cAAc,CAAA;AAIzB,EAAA,WAAA,CAAoB,IAApB,EAA8C,wBAA9C,EAAgG;AAAA;AAAA;AAAA;AAA5E,SAAA,IAAA,GAAA,IAAA;;AAA4E;AAAA;AAAlD,SAAA,wBAAA,GAAA,wBAAA;;AAAkD;AAAA;AAHxF,SAAA,OAAA,GAAU,KAAK,wBAAL,CAA8B,cAA9B,CAA6C,iBAA7C,CAAV;AAG4F;;AAEpG,EAAA,cAAc,GAAA;AAAA;AAAA;AAAA;;AACZ,QAAI,KAAK,YAAT,EAAuB;AAAA;AAAA;AAAA;AACrB,aAAO,KAAK,YAAZ;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;;AADY;AAKZ,SAAK,YAAL,GAAoB,KAAK,IAAL,CAAU,GAAV,CAA4B,KAAK,OAAjC,EAA0C,IAA1C,CAClB,WAAA,CAAA,GAAA,CAAI,CAAC,QAAD,KAA2B;AAAA;AAAA;;;;AAC7B,YAAM,WAAW;AAAA;AAAA,iCAAgB;AAC/B,QAAA,cAAc,EAAE,QAAQ,CAAC,cADM;AAE/B,QAAA,YAAY;AAAE;AAAA,sCAAA,EAAA,GAAA,QAAQ,CAAC,cAAT,MAAuB,IAAvB;AAAA;AAAA,qCAAuB,EAAA,KAAA,KAAA,CAAvB;AAAA;AAAA,qCAAuB,KAAA,CAAvB;AAAA;AAAA,qCAAuB,EAAA,CAAE,QAAF,CAAW,MAAX,CAAvB,CAFiB;AAG/B,QAAA,cAAc;AAAE;AAAA,sCAAA,EAAA,GAAA,QAAQ,CAAC,cAAT,MAAuB,IAAvB;AAAA;AAAA,qCAAuB,EAAA,KAAA,KAAA,CAAvB;AAAA;AAAA,qCAAuB,KAAA,CAAvB;AAAA;AAAA,qCAAuB,EAAA,CAAE,QAAF,CAAW,UAAX,CAAvB;AAHe,OAAhB,CAAjB;;AAD6B;AAAA;;AAM7B;AAAI;AAAA,mCAAA,QAAQ,CAAC,cAAT;AAAA;AAAA,mCAA2B,QAAQ,CAAC,4BAAD,CAAnC,CAAJ,EAAuE;AAAA;AAAA;AACrE,cAAM,uBAAuB;AAAA;AAAA,mCAAG,QAAQ,CAAC,4BAAD,CAAR,CAAuC,KAAvC,CAA6C,GAA7C,CAAH,CAA7B;AACA,cAAM,cAAc;AAAA;AAAA,mCAAG,uBAAuB,CAAC,MAAxB,CAA+B,CAAA,OAAO,KAAG;AAAA;AAAA;;AAAA,cAAA,EAAA;;AAAA;AAAA;AAAC,iBAAA;AAAA;AAAA,0CAAA,EAAA,GAAA,QAAQ,CAAC,cAAT,MAAuB,IAAvB;AAAA;AAAA,yCAAuB,EAAA,KAAA,KAAA,CAAvB;AAAA;AAAA,yCAAuB,KAAA,CAAvB;AAAA;AAAA,yCAAuB,EAAA,CAAE,QAAF,CAAW,OAAX,CAAvB;AAAA;AAA0C,SAApF,CAAH,CAApB;;AAFqE;AAAA;;AAGrE,YAAI,cAAc,CAAC,MAAf,GAAwB,CAA5B,EAA+B;AAAA;AAAA;AAAA;AAC7B,UAAA,WAAW,CAAC,SAAZ,GAAwB,cAAc,CAAC,CAAD,CAAtC;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAGD,OAND;AAAA;AAAA;AAAA;AAAA;;AAN6B;AAa7B,aAAO,WAAP;AACD,KAdD,CADkB,EAgBlB,WAAA,CAAA,WAAA,EAhBkB,CAApB;;AALY;AAAA;AAuBZ,WAAO,KAAK,YAAZ;AACD;;AA9BwB,C;;;;;;;;;;UARlB,MAAA,CAAA;;UAIA,4BAAA,CAAA;;;;;;AAII,cAAc,GAAA,OAAA,CAAA,UAAA,CAAA,CAD1B,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CAC0B,E,yCAIC,MAAA,CAAA,U,EAA8C,4BAAA,CAAA,wB,EAJ/C,CAAA,EAAd,cAAc,CAAd;;;;AAAA,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { ProfileInfo, InfoResponse } from './profile-info.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ProfileService {\n  private infoUrl = this.applicationConfigService.getEndpointFor('management/info');\n  private profileInfo$?: Observable<ProfileInfo>;\n\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\n\n  getProfileInfo(): Observable<ProfileInfo> {\n    if (this.profileInfo$) {\n      return this.profileInfo$;\n    }\n\n    this.profileInfo$ = this.http.get<InfoResponse>(this.infoUrl).pipe(\n      map((response: InfoResponse) => {\n        const profileInfo: ProfileInfo = {\n          activeProfiles: response.activeProfiles,\n          inProduction: response.activeProfiles?.includes('prod'),\n          openAPIEnabled: response.activeProfiles?.includes('api-docs'),\n        };\n        if (response.activeProfiles && response['display-ribbon-on-profiles']) {\n          const displayRibbonOnProfiles = response['display-ribbon-on-profiles'].split(',');\n          const ribbonProfiles = displayRibbonOnProfiles.filter(profile => response.activeProfiles?.includes(profile));\n          if (ribbonProfiles.length > 0) {\n            profileInfo.ribbonEnv = ribbonProfiles[0];\n          }\n        }\n        return profileInfo;\n      }),\n      shareReplay()\n    );\n    return this.profileInfo$;\n  }\n}\n"]}