c2ddcc38a31cc8eaf2ff40ae944ab6e5
/* istanbul ignore next */
function cov_1g4lf4rce6() {
  var path = "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/admin/logs/logs.component.html";
  var hash = "e963a08239a814ce3ed6693a56a6ca2a1a6a73d2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/admin/logs/logs.component.html",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 2390
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e963a08239a814ce3ed6693a56a6ca2a1a6a73d2"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1g4lf4rce6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1g4lf4rce6();
cov_1g4lf4rce6().s[0]++;
module.exports = "<div class=\"table-responsive\" *ngIf=\"loggers\">\n  <h2 id=\"logs-page-heading\" data-cy=\"logsPageHeading\">Logs</h2>\n\n  <p>There are {{ loggers.length }} loggers.</p>\n\n  <span>Filter</span>\n  <input type=\"text\" [(ngModel)]=\"filter\" (ngModelChange)=\"filterAndSort()\" class=\"form-control\" />\n\n  <table class=\"table table-sm table-striped table-bordered\" aria-describedby=\"logs-page-heading\">\n    <thead>\n      <tr jhiSort [(predicate)]=\"orderProp\" [(ascending)]=\"ascending\" [callback]=\"filterAndSort.bind(this)\">\n        <th jhiSortBy=\"name\" scope=\"col\"><span>Name</span> <fa-icon icon=\"sort\"></fa-icon></th>\n        <th jhiSortBy=\"level\" scope=\"col\"><span>Level</span> <fa-icon icon=\"sort\"></fa-icon></th>\n      </tr>\n    </thead>\n\n    <tr *ngFor=\"let logger of filteredAndOrderedLoggers\">\n      <td>\n        <small>{{ logger.name | slice: 0:140 }}</small>\n      </td>\n      <td>\n        <button\n          (click)=\"changeLevel(logger.name, 'TRACE')\"\n          [ngClass]=\"logger.level === 'TRACE' ? 'btn-primary' : 'btn-light'\"\n          class=\"btn btn-sm\"\n        >\n          TRACE\n        </button>\n\n        <button\n          (click)=\"changeLevel(logger.name, 'DEBUG')\"\n          [ngClass]=\"logger.level === 'DEBUG' ? 'btn-success' : 'btn-light'\"\n          class=\"btn btn-sm\"\n        >\n          DEBUG\n        </button>\n\n        <button\n          (click)=\"changeLevel(logger.name, 'INFO')\"\n          [ngClass]=\"logger.level === 'INFO' ? 'btn-info' : 'btn-light'\"\n          class=\"btn btn-sm\"\n        >\n          INFO\n        </button>\n\n        <button\n          (click)=\"changeLevel(logger.name, 'WARN')\"\n          [ngClass]=\"logger.level === 'WARN' ? 'btn-warning' : 'btn-light'\"\n          class=\"btn btn-sm\"\n        >\n          WARN\n        </button>\n\n        <button\n          (click)=\"changeLevel(logger.name, 'ERROR')\"\n          [ngClass]=\"logger.level === 'ERROR' ? 'btn-danger' : 'btn-light'\"\n          class=\"btn btn-sm\"\n        >\n          ERROR\n        </button>\n\n        <button\n          (click)=\"changeLevel(logger.name, 'OFF')\"\n          [ngClass]=\"logger.level === 'OFF' ? 'btn-secondary' : 'btn-light'\"\n          class=\"btn btn-sm\"\n        >\n          OFF\n        </button>\n      </td>\n    </tr>\n  </table>\n</div>\n";