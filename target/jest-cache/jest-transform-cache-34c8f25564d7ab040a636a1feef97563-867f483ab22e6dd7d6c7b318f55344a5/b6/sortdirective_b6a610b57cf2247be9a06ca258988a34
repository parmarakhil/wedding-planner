89874cea6569bc223375ea568bf333ec
"use strict";

/* istanbul ignore next */
function cov_10n2k0ij7k() {
  var path = "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/shared/sort/sort.directive.ts";
  var hash = "7ff5f8dbf2b9c96bb5c1b619c868462ff022bb1c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/shared/sort/sort.directive.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 31
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "5": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 57
        }
      },
      "6": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 57
        }
      },
      "7": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "8": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 36
        }
      },
      "9": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 45
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 31
        }
      },
      "11": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 45
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "14": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 79
        }
      },
      "15": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 35
        }
      },
      "16": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 45
        }
      },
      "17": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 54
        }
      },
      "18": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 84
        }
      },
      "19": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 42,
          column: 2
        }
      },
      "20": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 47,
          column: 18
        }
      },
      "21": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 48,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 29
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 14
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 28,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 56
          },
          end: {
            line: 28,
            column: 60
          }
        }, {
          start: {
            line: 28,
            column: 63
          },
          end: {
            line: 28,
            column: 78
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 61
          },
          end: {
            line: 32,
            column: 67
          }
        }, {
          start: {
            line: 32,
            column: 70
          },
          end: {
            line: 32,
            column: 83
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 41
          }
        }, {
          start: {
            line: 32,
            column: 45
          },
          end: {
            line: 32,
            column: 58
          }
        }],
        line: 32
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/shared/sort/sort.directive.ts",
      mappings: ";;;;AAAA,wCAAuE;IAK1D,aAAa,SAAb,aAAa;;QAqBd,oBAAe,GAAG,IAAI,mBAAY,EAAK,CAAC;QACxC,oBAAe,GAAG,IAAI,mBAAY,EAAW,CAAC;IAc1D,CAAC;IAnCC,IACI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IACD,IAAI,SAAS,CAAC,SAAwB;QACpC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAED,IACI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IACD,IAAI,SAAS,CAAC,SAA8B;QAC1C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAUD,IAAI,CAAC,KAAS;;QACZ,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,QAAQ,EAAE;YACvC,IAAI,CAAC,SAAS,GAAG,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;YACnE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC1C,MAAA,IAAI,CAAC,QAAQ,+CAAb,IAAI,CAAa,CAAC;SACnB;IACH,CAAC;CACF,CAAA;;wBAnCE,YAAK;wBASL,YAAK;uBASL,YAAK;8BAEL,aAAM;8BACN,aAAM;;AAtBI,aAAa;IAHzB,gBAAS,CAAC;QACT,QAAQ,EAAE,WAAW;KACtB,CAAC;GACW,aAAa,CAoCzB;AApCY,sCAAa",
      names: [],
      sources: ["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/shared/sort/sort.directive.ts"],
      sourcesContent: ["import { Directive, EventEmitter, Input, Output } from '@angular/core';\n\n@Directive({\n  selector: '[jhiSort]',\n})\nexport class SortDirective<T> {\n  @Input()\n  get predicate(): T | undefined {\n    return this._predicate;\n  }\n  set predicate(predicate: T | undefined) {\n    this._predicate = predicate;\n    this.predicateChange.emit(predicate);\n  }\n\n  @Input()\n  get ascending(): boolean | undefined {\n    return this._ascending;\n  }\n  set ascending(ascending: boolean | undefined) {\n    this._ascending = ascending;\n    this.ascendingChange.emit(ascending);\n  }\n\n  @Input() callback?: () => void;\n\n  @Output() predicateChange = new EventEmitter<T>();\n  @Output() ascendingChange = new EventEmitter<boolean>();\n\n  private _predicate?: T;\n  private _ascending?: boolean;\n\n  sort(field?: T): void {\n    if (String(this.predicate) !== '_score') {\n      this.ascending = field !== this.predicate ? true : !this.ascending;\n      this.predicate = field;\n      this.predicateChange.emit(field);\n      this.ascendingChange.emit(this.ascending);\n      this.callback?.();\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7ff5f8dbf2b9c96bb5c1b619c868462ff022bb1c"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10n2k0ij7k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_10n2k0ij7k();
cov_10n2k0ij7k().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_10n2k0ij7k().s[1]++;
exports.SortDirective = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_10n2k0ij7k().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_10n2k0ij7k().s[3]++, require("@angular/core"));

/* istanbul ignore next */
cov_10n2k0ij7k().s[4]++;
let SortDirective = class SortDirective {
  constructor() {
    /* istanbul ignore next */
    cov_10n2k0ij7k().f[0]++;
    cov_10n2k0ij7k().s[5]++;
    this.predicateChange = new core_1.EventEmitter();

    /* istanbul ignore next */
    cov_10n2k0ij7k().s[6]++;
    this.ascendingChange = new core_1.EventEmitter();
  }

  get predicate() {
    /* istanbul ignore next */
    cov_10n2k0ij7k().f[1]++;
    cov_10n2k0ij7k().s[7]++;
    return this._predicate;
  }

  set predicate(predicate) {
    /* istanbul ignore next */
    cov_10n2k0ij7k().f[2]++;
    cov_10n2k0ij7k().s[8]++;
    this._predicate = predicate;

    /* istanbul ignore next */
    cov_10n2k0ij7k().s[9]++;
    this.predicateChange.emit(predicate);
  }

  get ascending() {
    /* istanbul ignore next */
    cov_10n2k0ij7k().f[3]++;
    cov_10n2k0ij7k().s[10]++;
    return this._ascending;
  }

  set ascending(ascending) {
    /* istanbul ignore next */
    cov_10n2k0ij7k().f[4]++;
    cov_10n2k0ij7k().s[11]++;
    this._ascending = ascending;

    /* istanbul ignore next */
    cov_10n2k0ij7k().s[12]++;
    this.ascendingChange.emit(ascending);
  }

  sort(field) {
    /* istanbul ignore next */
    cov_10n2k0ij7k().f[5]++;

    var _a;

    /* istanbul ignore next */
    cov_10n2k0ij7k().s[13]++;

    if (String(this.predicate) !== '_score') {
      /* istanbul ignore next */
      cov_10n2k0ij7k().b[0][0]++;
      cov_10n2k0ij7k().s[14]++;
      this.ascending = field !== this.predicate ?
      /* istanbul ignore next */
      (cov_10n2k0ij7k().b[1][0]++, true) :
      /* istanbul ignore next */
      (cov_10n2k0ij7k().b[1][1]++, !this.ascending);

      /* istanbul ignore next */
      cov_10n2k0ij7k().s[15]++;
      this.predicate = field;

      /* istanbul ignore next */
      cov_10n2k0ij7k().s[16]++;
      this.predicateChange.emit(field);

      /* istanbul ignore next */
      cov_10n2k0ij7k().s[17]++;
      this.ascendingChange.emit(this.ascending);

      /* istanbul ignore next */
      cov_10n2k0ij7k().s[18]++;

      /* istanbul ignore next */
      (cov_10n2k0ij7k().b[3][0]++, (_a = this.callback) === null) ||
      /* istanbul ignore next */
      (cov_10n2k0ij7k().b[3][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_10n2k0ij7k().b[2][0]++, void 0) :
      /* istanbul ignore next */
      (cov_10n2k0ij7k().b[2][1]++, _a.call(this));
    } else
    /* istanbul ignore next */
    {
      cov_10n2k0ij7k().b[0][1]++;
    }
  }

};

/* istanbul ignore next */
cov_10n2k0ij7k().s[19]++;
SortDirective.propDecorators = {
  predicate: [{
    type: core_1.Input
  }],
  ascending: [{
    type: core_1.Input
  }],
  callback: [{
    type: core_1.Input
  }],
  predicateChange: [{
    type: core_1.Output
  }],
  ascendingChange: [{
    type: core_1.Output
  }]
};

/* istanbul ignore next */
cov_10n2k0ij7k().s[20]++;
SortDirective = tslib_1.__decorate([core_1.Directive({
  selector: '[jhiSort]'
})], SortDirective);

/* istanbul ignore next */
cov_10n2k0ij7k().s[21]++;
exports.SortDirective = SortDirective;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ha2hpbHNpbmdoL0Rlc2t0b3AvUHJvamVjdHMvd2VkZGluZy9zcmMvbWFpbi93ZWJhcHAvYXBwL3NoYXJlZC9zb3J0L3NvcnQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBWVE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBWlIsTUFBQSxNQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUE7Ozs7SUFLYSxhQUFhLEdBQUEsTUFBYixhQUFhLENBQUE7Ozs7O0FBcUJkLFNBQUEsZUFBQSxHQUFrQixJQUFJLE1BQUEsQ0FBQSxZQUFKLEVBQWxCOzs7O0FBQ0EsU0FBQSxlQUFBLEdBQWtCLElBQUksTUFBQSxDQUFBLFlBQUosRUFBbEI7QUFjWDs7QUFsQ2MsTUFBVCxTQUFTLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDWCxXQUFPLEtBQUssVUFBWjtBQUNEOztBQUNZLE1BQVQsU0FBUyxDQUFDLFNBQUQsRUFBeUI7QUFBQTtBQUFBO0FBQUE7QUFDcEMsU0FBSyxVQUFMLEdBQWtCLFNBQWxCOztBQURvQztBQUFBO0FBRXBDLFNBQUssZUFBTCxDQUFxQixJQUFyQixDQUEwQixTQUExQjtBQUNEOztBQUdZLE1BQVQsU0FBUyxHQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1gsV0FBTyxLQUFLLFVBQVo7QUFDRDs7QUFDWSxNQUFULFNBQVMsQ0FBQyxTQUFELEVBQStCO0FBQUE7QUFBQTtBQUFBO0FBQzFDLFNBQUssVUFBTCxHQUFrQixTQUFsQjs7QUFEMEM7QUFBQTtBQUUxQyxTQUFLLGVBQUwsQ0FBcUIsSUFBckIsQ0FBMEIsU0FBMUI7QUFDRDs7QUFVRCxFQUFBLElBQUksQ0FBQyxLQUFELEVBQVU7QUFBQTtBQUFBOzs7O0FBQUE7QUFBQTs7QUFDWixRQUFJLE1BQU0sQ0FBQyxLQUFLLFNBQU4sQ0FBTixLQUEyQixRQUEvQixFQUF5QztBQUFBO0FBQUE7QUFBQTtBQUN2QyxXQUFLLFNBQUwsR0FBaUIsS0FBSyxLQUFLLEtBQUssU0FBZjtBQUFBO0FBQUEsbUNBQTJCLElBQTNCO0FBQUE7QUFBQSxtQ0FBa0MsQ0FBQyxLQUFLLFNBQXhDLENBQWpCOztBQUR1QztBQUFBO0FBRXZDLFdBQUssU0FBTCxHQUFpQixLQUFqQjs7QUFGdUM7QUFBQTtBQUd2QyxXQUFLLGVBQUwsQ0FBcUIsSUFBckIsQ0FBMEIsS0FBMUI7O0FBSHVDO0FBQUE7QUFJdkMsV0FBSyxlQUFMLENBQXFCLElBQXJCLENBQTBCLEtBQUssU0FBL0I7O0FBSnVDO0FBQUE7O0FBS3ZDO0FBQUEsb0NBQUEsRUFBQSxHQUFBLEtBQUssUUFBTCxNQUFhLElBQWI7QUFBQTtBQUFBLG1DQUFhLEVBQUEsS0FBQSxLQUFBLENBQWI7QUFBQTtBQUFBLG1DQUFhLEtBQUEsQ0FBYjtBQUFBO0FBQUEsbUNBQWEsRUFBQSxDQUFBLElBQUEsQ0FBYixJQUFhLENBQWI7QUFDRCxLQU5EO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFPRDs7QUFuQ3VCLEM7Ozs7OztVQUN2QixNQUFBLENBQUE7OztVQVNBLE1BQUEsQ0FBQTs7O1VBU0EsTUFBQSxDQUFBOzs7VUFFQSxNQUFBLENBQUE7OztVQUNBLE1BQUEsQ0FBQTs7Ozs7O0FBdEJVLGFBQWEsR0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBSHpCLE1BQUEsQ0FBQSxTQUFBLENBQVU7QUFDVCxFQUFBLFFBQVEsRUFBRTtBQURELENBQVYsQ0FHeUIsQ0FBQSxFQUFiLGFBQWEsQ0FBYjs7OztBQUFBLE9BQUEsQ0FBQSxhQUFBLEdBQUEsYUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tqaGlTb3J0XScsXG59KVxuZXhwb3J0IGNsYXNzIFNvcnREaXJlY3RpdmU8VD4ge1xuICBASW5wdXQoKVxuICBnZXQgcHJlZGljYXRlKCk6IFQgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLl9wcmVkaWNhdGU7XG4gIH1cbiAgc2V0IHByZWRpY2F0ZShwcmVkaWNhdGU6IFQgfCB1bmRlZmluZWQpIHtcbiAgICB0aGlzLl9wcmVkaWNhdGUgPSBwcmVkaWNhdGU7XG4gICAgdGhpcy5wcmVkaWNhdGVDaGFuZ2UuZW1pdChwcmVkaWNhdGUpO1xuICB9XG5cbiAgQElucHV0KClcbiAgZ2V0IGFzY2VuZGluZygpOiBib29sZWFuIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5fYXNjZW5kaW5nO1xuICB9XG4gIHNldCBhc2NlbmRpbmcoYXNjZW5kaW5nOiBib29sZWFuIHwgdW5kZWZpbmVkKSB7XG4gICAgdGhpcy5fYXNjZW5kaW5nID0gYXNjZW5kaW5nO1xuICAgIHRoaXMuYXNjZW5kaW5nQ2hhbmdlLmVtaXQoYXNjZW5kaW5nKTtcbiAgfVxuXG4gIEBJbnB1dCgpIGNhbGxiYWNrPzogKCkgPT4gdm9pZDtcblxuICBAT3V0cHV0KCkgcHJlZGljYXRlQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxUPigpO1xuICBAT3V0cHV0KCkgYXNjZW5kaW5nQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuXG4gIHByaXZhdGUgX3ByZWRpY2F0ZT86IFQ7XG4gIHByaXZhdGUgX2FzY2VuZGluZz86IGJvb2xlYW47XG5cbiAgc29ydChmaWVsZD86IFQpOiB2b2lkIHtcbiAgICBpZiAoU3RyaW5nKHRoaXMucHJlZGljYXRlKSAhPT0gJ19zY29yZScpIHtcbiAgICAgIHRoaXMuYXNjZW5kaW5nID0gZmllbGQgIT09IHRoaXMucHJlZGljYXRlID8gdHJ1ZSA6ICF0aGlzLmFzY2VuZGluZztcbiAgICAgIHRoaXMucHJlZGljYXRlID0gZmllbGQ7XG4gICAgICB0aGlzLnByZWRpY2F0ZUNoYW5nZS5lbWl0KGZpZWxkKTtcbiAgICAgIHRoaXMuYXNjZW5kaW5nQ2hhbmdlLmVtaXQodGhpcy5hc2NlbmRpbmcpO1xuICAgICAgdGhpcy5jYWxsYmFjaz8uKCk7XG4gICAgfVxuICB9XG59XG4iXX0=