bfbd6833e8447ba356f99e39bf693e53
"use strict";

/* istanbul ignore next */
function cov_28zdptb4uf() {
  var path = "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/core/util/alert.service.ts";
  var hash = "e4c359d1393cecad71e856a6ea8da674775e6254";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/core/util/alert.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 27
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "5": {
        start: {
          line: 7,
          column: 19
        },
        end: {
          line: 61,
          column: 1
        }
      },
      "6": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 35
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 29
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 28
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 27
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 36
        }
      },
      "11": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 25
        }
      },
      "12": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 25
        }
      },
      "13": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 25
        }
      },
      "14": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 27
        }
      },
      "15": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 34
        }
      },
      "16": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 178
        }
      },
      "17": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 91
        }
      },
      "18": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 85
        }
      },
      "19": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 94
        }
      },
      "20": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 78
        }
      },
      "21": {
        start: {
          line: 38,
          column: 39
        },
        end: {
          line: 38,
          column: 77
        }
      },
      "22": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 91
        }
      },
      "23": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "24": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 49,
          column: 15
        }
      },
      "25": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 48,
          column: 34
        }
      },
      "26": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 47,
          column: 23
        }
      },
      "27": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 46,
          column: 120
        }
      },
      "28": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 21
        }
      },
      "29": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 54,
          column: 91
        }
      },
      "30": {
        start: {
          line: 55,
          column: 27
        },
        end: {
          line: 55,
          column: 73
        }
      },
      "31": {
        start: {
          line: 55,
          column: 47
        },
        end: {
          line: 55,
          column: 55
        }
      },
      "32": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "33": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 41
        }
      },
      "34": {
        start: {
          line: 62,
          column: 0
        },
        end: {
          line: 65,
          column: 2
        }
      },
      "35": {
        start: {
          line: 62,
          column: 36
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "36": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 71,
          column: 17
        }
      },
      "37": {
        start: {
          line: 72,
          column: 0
        },
        end: {
          line: 72,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 35
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 10
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 22
          },
          end: {
            line: 38,
            column: 23
          }
        },
        loc: {
          start: {
            line: 38,
            column: 39
          },
          end: {
            line: 38,
            column: 77
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 43,
            column: 42
          },
          end: {
            line: 43,
            column: 43
          }
        },
        loc: {
          start: {
            line: 43,
            column: 48
          },
          end: {
            line: 49,
            column: 13
          }
        },
        line: 43
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 44,
            column: 27
          },
          end: {
            line: 44,
            column: 28
          }
        },
        loc: {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 48,
            column: 17
          }
        },
        line: 44
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 45,
            column: 36
          },
          end: {
            line: 45,
            column: 37
          }
        },
        loc: {
          start: {
            line: 45,
            column: 42
          },
          end: {
            line: 47,
            column: 21
          }
        },
        line: 45
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 35
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 53
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 55,
            column: 38
          },
          end: {
            line: 55,
            column: 39
          }
        },
        loc: {
          start: {
            line: 55,
            column: 47
          },
          end: {
            line: 55,
            column: 55
          }
        },
        line: 55
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 62,
            column: 30
          },
          end: {
            line: 62,
            column: 31
          }
        },
        loc: {
          start: {
            line: 62,
            column: 36
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 62
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 177
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 170
          },
          end: {
            line: 34,
            column: 172
          }
        }, {
          start: {
            line: 34,
            column: 175
          },
          end: {
            line: 34,
            column: 177
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 167
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 150
          }
        }, {
          start: {
            line: 34,
            column: 154
          },
          end: {
            line: 34,
            column: 167
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 83
          },
          end: {
            line: 34,
            column: 139
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 132
          },
          end: {
            line: 34,
            column: 134
          }
        }, {
          start: {
            line: 34,
            column: 137
          },
          end: {
            line: 34,
            column: 139
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 83
          },
          end: {
            line: 34,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 83
          },
          end: {
            line: 34,
            column: 112
          }
        }, {
          start: {
            line: 34,
            column: 116
          },
          end: {
            line: 34,
            column: 129
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 73
          },
          end: {
            line: 35,
            column: 75
          }
        }, {
          start: {
            line: 35,
            column: 78
          },
          end: {
            line: 35,
            column: 90
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 53
          }
        }, {
          start: {
            line: 35,
            column: 57
          },
          end: {
            line: 35,
            column: 70
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 22
          },
          end: {
            line: 36,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 69
          },
          end: {
            line: 36,
            column: 71
          }
        }, {
          start: {
            line: 36,
            column: 74
          },
          end: {
            line: 36,
            column: 84
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 22
          },
          end: {
            line: 36,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 22
          },
          end: {
            line: 36,
            column: 49
          }
        }, {
          start: {
            line: 36,
            column: 53
          },
          end: {
            line: 36,
            column: 66
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 37,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 75
          },
          end: {
            line: 37,
            column: 77
          }
        }, {
          start: {
            line: 37,
            column: 80
          },
          end: {
            line: 37,
            column: 93
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 37,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 37,
            column: 55
          }
        }, {
          start: {
            line: 37,
            column: 59
          },
          end: {
            line: 37,
            column: 72
          }
        }],
        line: 37
      },
      "10": {
        loc: {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 39,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 54
          },
          end: {
            line: 39,
            column: 63
          }
        }, {
          start: {
            line: 39,
            column: 66
          },
          end: {
            line: 39,
            column: 77
          }
        }],
        line: 39
      },
      "11": {
        loc: {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 39,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 39,
            column: 27
          }
        }, {
          start: {
            line: 39,
            column: 31
          },
          end: {
            line: 39,
            column: 51
          }
        }],
        line: 39
      },
      "12": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }],
        line: 40
      },
      "13": {
        loc: {
          start: {
            line: 46,
            column: 50
          },
          end: {
            line: 46,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 95
          },
          end: {
            line: 46,
            column: 104
          }
        }, {
          start: {
            line: 46,
            column: 107
          },
          end: {
            line: 46,
            column: 118
          }
        }],
        line: 46
      },
      "14": {
        loc: {
          start: {
            line: 46,
            column: 50
          },
          end: {
            line: 46,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 50
          },
          end: {
            line: 46,
            column: 68
          }
        }, {
          start: {
            line: 46,
            column: 72
          },
          end: {
            line: 46,
            column: 92
          }
        }],
        line: 46
      },
      "15": {
        loc: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 68
          },
          end: {
            line: 54,
            column: 77
          }
        }, {
          start: {
            line: 54,
            column: 80
          },
          end: {
            line: 54,
            column: 91
          }
        }],
        line: 54
      },
      "16": {
        loc: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 41
          }
        }, {
          start: {
            line: 54,
            column: 45
          },
          end: {
            line: 54,
            column: 65
          }
        }],
        line: 54
      },
      "17": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }],
        line: 57
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/core/util/alert.service.ts",
      mappings: ";;;;AAAA,wCAAoE;AACpE,gEAAyD;IAiB5C,YAAY,SAAZ,YAAY;IASvB,YAAoB,SAAuB,EAAU,MAAc;QAA/C,cAAS,GAAT,SAAS,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QARnE,YAAO,GAAG,IAAI,CAAC;QACf,UAAK,GAAG,KAAK,CAAC;QACd,aAAQ,GAAG,WAAW,CAAC;QAEvB,2CAA2C;QACnC,YAAO,GAAG,CAAC,CAAC;QACZ,WAAM,GAAY,EAAE,CAAC;IAEyC,CAAC;IAEvE,KAAK;QACH,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAED,GAAG;QACD,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;;;;;;OAMG;IACH,QAAQ,CAAC,KAAY,EAAE,SAAmB;;QACxC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAE1B,KAAK,CAAC,OAAO,GAAG,MAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,sBAAe,CAAC,IAAI,EAAE,MAAA,KAAK,CAAC,OAAO,mCAAI,EAAE,CAAC,mCAAI,EAAE,CAAC;QACzF,KAAK,CAAC,OAAO,GAAG,MAAA,KAAK,CAAC,OAAO,mCAAI,IAAI,CAAC,OAAO,CAAC;QAC9C,KAAK,CAAC,KAAK,GAAG,MAAA,KAAK,CAAC,KAAK,mCAAI,IAAI,CAAC,KAAK,CAAC;QACxC,KAAK,CAAC,QAAQ,GAAG,MAAA,KAAK,CAAC,QAAQ,mCAAI,IAAI,CAAC,QAAQ,CAAC;QACjD,KAAK,CAAC,KAAK,GAAG,CAAC,WAAoB,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAG,EAAE,WAAW,CAAC,CAAC;QAEhF,CAAC,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEvC,IAAI,KAAK,CAAC,OAAO,GAAG,CAAC,EAAE;YACrB,gDAAgD;YAChD,sDAAsD;YACtD,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE;gBACjC,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;wBACnB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAG,EAAE,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC;oBACvD,CAAC,CAAC,CAAC;gBACL,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;SACJ;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,UAAU,CAAC,OAAe,EAAE,SAAmB;QACrD,MAAM,MAAM,GAAG,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,IAAI,CAAC,MAAM,CAAC;QACxC,MAAM,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAClE,6BAA6B;QAC7B,IAAI,UAAU,IAAI,CAAC,EAAE;YACnB,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;SAC9B;IACH,CAAC;CACF,CAAA;;YA7EQ,+BAAY;YADiB,aAAM;;AAkB/B,YAAY;IAHxB,iBAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;6CAU+B,+BAAY,EAAkB,aAAM;GATxD,YAAY,CA4DxB;AA5DY,oCAAY",
      names: [],
      sources: ["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/core/util/alert.service.ts"],
      sourcesContent: ["import { Injectable, SecurityContext, NgZone } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nexport type AlertType = 'success' | 'danger' | 'warning' | 'info';\n\nexport interface Alert {\n  id?: number;\n  type: AlertType;\n  message?: string;\n  timeout?: number;\n  toast?: boolean;\n  position?: string;\n  close?: (alerts: Alert[]) => void;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlertService {\n  timeout = 5000;\n  toast = false;\n  position = 'top right';\n\n  // unique id for each alert. Starts from 0.\n  private alertId = 0;\n  private alerts: Alert[] = [];\n\n  constructor(private sanitizer: DomSanitizer, private ngZone: NgZone) {}\n\n  clear(): void {\n    this.alerts = [];\n  }\n\n  get(): Alert[] {\n    return this.alerts;\n  }\n\n  /**\n   * Adds alert to alerts array and returns added alert.\n   * @param alert      Alert to add. If `timeout`, `toast` or `position` is missing then applying default value.\n   * @param extAlerts  If missing then adding `alert` to `AlertService` internal array and alerts can be retrieved by `get()`.\n   *                   Else adding `alert` to `extAlerts`.\n   * @returns  Added alert\n   */\n  addAlert(alert: Alert, extAlerts?: Alert[]): Alert {\n    alert.id = this.alertId++;\n\n    alert.message = this.sanitizer.sanitize(SecurityContext.HTML, alert.message ?? '') ?? '';\n    alert.timeout = alert.timeout ?? this.timeout;\n    alert.toast = alert.toast ?? this.toast;\n    alert.position = alert.position ?? this.position;\n    alert.close = (alertsArray: Alert[]) => this.closeAlert(alert.id!, alertsArray);\n\n    (extAlerts ?? this.alerts).push(alert);\n\n    if (alert.timeout > 0) {\n      // Workaround protractor waiting for setTimeout.\n      // Reference https://www.protractortest.org/#/timeouts\n      this.ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.ngZone.run(() => {\n            this.closeAlert(alert.id!, extAlerts ?? this.alerts);\n          });\n        }, alert.timeout);\n      });\n    }\n\n    return alert;\n  }\n\n  private closeAlert(alertId: number, extAlerts?: Alert[]): void {\n    const alerts = extAlerts ?? this.alerts;\n    const alertIndex = alerts.map(alert => alert.id).indexOf(alertId);\n    // if found alert then remove\n    if (alertIndex >= 0) {\n      alerts.splice(alertIndex, 1);\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e4c359d1393cecad71e856a6ea8da674775e6254"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_28zdptb4uf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_28zdptb4uf();
cov_28zdptb4uf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_28zdptb4uf().s[1]++;
exports.AlertService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_28zdptb4uf().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_28zdptb4uf().s[3]++, require("@angular/core"));
const platform_browser_1 =
/* istanbul ignore next */
(cov_28zdptb4uf().s[4]++, require("@angular/platform-browser"));

/* istanbul ignore next */
cov_28zdptb4uf().s[5]++;
let AlertService = class AlertService {
  constructor(sanitizer, ngZone) {
    /* istanbul ignore next */
    cov_28zdptb4uf().f[0]++;
    cov_28zdptb4uf().s[6]++;
    this.sanitizer = sanitizer;

    /* istanbul ignore next */
    cov_28zdptb4uf().s[7]++;
    this.ngZone = ngZone;

    /* istanbul ignore next */
    cov_28zdptb4uf().s[8]++;
    this.timeout = 5000;

    /* istanbul ignore next */
    cov_28zdptb4uf().s[9]++;
    this.toast = false;

    /* istanbul ignore next */
    cov_28zdptb4uf().s[10]++;
    this.position = 'top right'; // unique id for each alert. Starts from 0.

    /* istanbul ignore next */
    cov_28zdptb4uf().s[11]++;
    this.alertId = 0;

    /* istanbul ignore next */
    cov_28zdptb4uf().s[12]++;
    this.alerts = [];
  }

  clear() {
    /* istanbul ignore next */
    cov_28zdptb4uf().f[1]++;
    cov_28zdptb4uf().s[13]++;
    this.alerts = [];
  }

  get() {
    /* istanbul ignore next */
    cov_28zdptb4uf().f[2]++;
    cov_28zdptb4uf().s[14]++;
    return this.alerts;
  }
  /**
   * Adds alert to alerts array and returns added alert.
   * @param alert      Alert to add. If `timeout`, `toast` or `position` is missing then applying default value.
   * @param extAlerts  If missing then adding `alert` to `AlertService` internal array and alerts can be retrieved by `get()`.
   *                   Else adding `alert` to `extAlerts`.
   * @returns  Added alert
   */


  addAlert(alert, extAlerts) {
    /* istanbul ignore next */
    cov_28zdptb4uf().f[3]++;

    var _a, _b, _c, _d, _e;

    /* istanbul ignore next */
    cov_28zdptb4uf().s[15]++;
    alert.id = this.alertId++;

    /* istanbul ignore next */
    cov_28zdptb4uf().s[16]++;
    alert.message =
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[1][0]++, (_b = this.sanitizer.sanitize(core_1.SecurityContext.HTML,
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[3][0]++, (_a = alert.message) !== null) &&
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[3][1]++, _a !== void 0) ?
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[2][0]++, _a) :
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[2][1]++, ''))) !== null) &&
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[1][1]++, _b !== void 0) ?
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[0][0]++, _b) :
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[0][1]++, '');

    /* istanbul ignore next */
    cov_28zdptb4uf().s[17]++;
    alert.timeout =
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[5][0]++, (_c = alert.timeout) !== null) &&
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[5][1]++, _c !== void 0) ?
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[4][0]++, _c) :
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[4][1]++, this.timeout);

    /* istanbul ignore next */
    cov_28zdptb4uf().s[18]++;
    alert.toast =
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[7][0]++, (_d = alert.toast) !== null) &&
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[7][1]++, _d !== void 0) ?
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[6][0]++, _d) :
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[6][1]++, this.toast);

    /* istanbul ignore next */
    cov_28zdptb4uf().s[19]++;
    alert.position =
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[9][0]++, (_e = alert.position) !== null) &&
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[9][1]++, _e !== void 0) ?
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[8][0]++, _e) :
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[8][1]++, this.position);

    /* istanbul ignore next */
    cov_28zdptb4uf().s[20]++;

    alert.close = (alertsArray) => {
      /* istanbul ignore next */
      cov_28zdptb4uf().f[4]++;
      cov_28zdptb4uf().s[21]++;
      return this.closeAlert(alert.id, alertsArray);
    };

    /* istanbul ignore next */
    cov_28zdptb4uf().s[22]++;
    (
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[11][0]++, extAlerts !== null) &&
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[11][1]++, extAlerts !== void 0) ?
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[10][0]++, extAlerts) :
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[10][1]++, this.alerts)).push(alert);

    /* istanbul ignore next */
    cov_28zdptb4uf().s[23]++;

    if (alert.timeout > 0) {
      /* istanbul ignore next */
      cov_28zdptb4uf().b[12][0]++;
      cov_28zdptb4uf().s[24]++;
      // Workaround protractor waiting for setTimeout.
      // Reference https://www.protractortest.org/#/timeouts
      this.ngZone.runOutsideAngular(() => {
        /* istanbul ignore next */
        cov_28zdptb4uf().f[5]++;
        cov_28zdptb4uf().s[25]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_28zdptb4uf().f[6]++;
          cov_28zdptb4uf().s[26]++;
          this.ngZone.run(() => {
            /* istanbul ignore next */
            cov_28zdptb4uf().f[7]++;
            cov_28zdptb4uf().s[27]++;
            this.closeAlert(alert.id,
            /* istanbul ignore next */
            (cov_28zdptb4uf().b[14][0]++, extAlerts !== null) &&
            /* istanbul ignore next */
            (cov_28zdptb4uf().b[14][1]++, extAlerts !== void 0) ?
            /* istanbul ignore next */
            (cov_28zdptb4uf().b[13][0]++, extAlerts) :
            /* istanbul ignore next */
            (cov_28zdptb4uf().b[13][1]++, this.alerts));
          });
        }, alert.timeout);
      });
    } else
    /* istanbul ignore next */
    {
      cov_28zdptb4uf().b[12][1]++;
    }

    cov_28zdptb4uf().s[28]++;
    return alert;
  }

  closeAlert(alertId, extAlerts) {
    /* istanbul ignore next */
    cov_28zdptb4uf().f[8]++;
    const alerts =
    /* istanbul ignore next */
    (cov_28zdptb4uf().s[29]++,
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[16][0]++, extAlerts !== null) &&
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[16][1]++, extAlerts !== void 0) ?
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[15][0]++, extAlerts) :
    /* istanbul ignore next */
    (cov_28zdptb4uf().b[15][1]++, this.alerts));
    const alertIndex =
    /* istanbul ignore next */
    (cov_28zdptb4uf().s[30]++, alerts.map((alert) => {
      /* istanbul ignore next */
      cov_28zdptb4uf().f[9]++;
      cov_28zdptb4uf().s[31]++;
      return alert.id;
    }).indexOf(alertId)); // if found alert then remove

    /* istanbul ignore next */
    cov_28zdptb4uf().s[32]++;

    if (alertIndex >= 0) {
      /* istanbul ignore next */
      cov_28zdptb4uf().b[17][0]++;
      cov_28zdptb4uf().s[33]++;
      alerts.splice(alertIndex, 1);
    } else
    /* istanbul ignore next */
    {
      cov_28zdptb4uf().b[17][1]++;
    }
  }

};

/* istanbul ignore next */
cov_28zdptb4uf().s[34]++;

AlertService.ctorParameters = () => {
  /* istanbul ignore next */
  cov_28zdptb4uf().f[10]++;
  cov_28zdptb4uf().s[35]++;
  return [{
    type: platform_browser_1.DomSanitizer
  }, {
    type: core_1.NgZone
  }];
};

/* istanbul ignore next */
cov_28zdptb4uf().s[36]++;
AlertService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [platform_browser_1.DomSanitizer, core_1.NgZone])], AlertService);

/* istanbul ignore next */
cov_28zdptb4uf().s[37]++;
exports.AlertService = AlertService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,