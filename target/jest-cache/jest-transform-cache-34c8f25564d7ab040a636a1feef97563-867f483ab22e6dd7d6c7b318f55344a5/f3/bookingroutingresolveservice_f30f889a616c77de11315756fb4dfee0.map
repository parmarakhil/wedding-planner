{"version":3,"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/entities/booking/route/booking-routing-resolve.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaU;;;;;;;;;;;;;;;;;;;;AAbV,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AAEA,MAAA,QAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,MAAA,CAAA,CAAA;AACA,MAAA,WAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AAEA,MAAA,eAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;AACA,MAAA,iBAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,4BAAA,CAAA,CAAA;;;;IAGa,4BAA4B,GAAA,MAA5B,4BAA4B,CAAA;AACvC,EAAA,WAAA,CAAsB,OAAtB,EAAyD,MAAzD,EAAuE;AAAA;AAAA;AAAA;AAAjD,SAAA,OAAA,GAAA,OAAA;;AAAiD;AAAA;AAAd,SAAA,MAAA,GAAA,MAAA;AAAkB;;AAE3E,EAAA,OAAO,CAAC,KAAD,EAA8B;AAAA;AAAA;AACnC,UAAM,EAAE;AAAA;AAAA,+BAAG,KAAK,CAAC,MAAN,CAAa,IAAb,CAAH,CAAR;;AADmC;AAAA;;AAEnC,QAAI,EAAJ,EAAQ;AAAA;AAAA;AAAA;AACN,aAAO,KAAK,OAAL,CAAa,IAAb,CAAkB,EAAlB,EAAsB,IAAtB,CACL,WAAA,CAAA,QAAA,CAAS,CAAC,OAAD,KAAmC;AAAA;AAAA;AAAA;;AAC1C,YAAI,OAAO,CAAC,IAAZ,EAAkB;AAAA;AAAA;AAAA;AAChB,iBAAO,MAAA,CAAA,EAAA,CAAG,OAAO,CAAC,IAAX,CAAP;AACD,SAFD,MAEO;AAAA;AAAA;AAAA;AACL,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,KAAD,CAArB;;AADK;AAAA;AAEL,iBAAO,MAAA,CAAA,KAAP;AACD;AACF,OAPD,CADK,CAAP;AAUD,KAXD;AAAA;AAAA;AAAA;AAAA;;AAFmC;AAcnC,WAAO,MAAA,CAAA,EAAA,CAAG,IAAI,eAAA,CAAA,OAAJ,EAAH,CAAP;AACD;;AAlBsC,C;;;;;;;;;;UAHhC,iBAAA,CAAA;;UALiC,QAAA,CAAA;;;;;;AAQ7B,4BAA4B,GAAA,OAAA,CAAA,UAAA,CAAA,CADxC,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CACwC,E,yCACR,iBAAA,CAAA,c,EAAkC,QAAA,CAAA,M,EAD1B,CAAA,EAA5B,4BAA4B,CAA5B;;;;AAAA,OAAA,CAAA,4BAAA,GAAA,4BAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { IBooking, Booking } from '../booking.model';\nimport { BookingService } from '../service/booking.service';\n\n@Injectable({ providedIn: 'root' })\nexport class BookingRoutingResolveService implements Resolve<IBooking> {\n  constructor(protected service: BookingService, protected router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IBooking> | Observable<never> {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id).pipe(\n        mergeMap((booking: HttpResponse<Booking>) => {\n          if (booking.body) {\n            return of(booking.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        })\n      );\n    }\n    return of(new Booking());\n  }\n}\n"]}