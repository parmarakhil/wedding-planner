c8e9265102363f4a1ca4481e9440a745
"use strict";

/* istanbul ignore next */
function cov_1bfjrfs23() {
  var path = "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/account/activate/activate.service.ts";
  var hash = "b05703aa68fb29ee2726fb10c760e9585fcd7282";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/account/activate/activate.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 37
        },
        end: {
          line: 7,
          column: 90
        }
      },
      "6": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 18,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 65
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 16,
          column: 11
        }
      },
      "10": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 22,
          column: 2
        }
      },
      "11": {
        start: {
          line: 19,
          column: 39
        },
        end: {
          line: 22,
          column: 1
        }
      },
      "12": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 26,
          column: 20
        }
      },
      "13": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 48
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 13
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 19,
            column: 34
          }
        },
        loc: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 19
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/account/activate/activate.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAC3C,+CAA8D;AAG9D,2FAAsF;IAGzE,eAAe,SAAf,eAAe;IAC1B,YAAoB,IAAgB,EAAU,wBAAkD;QAA5E,SAAI,GAAJ,IAAI,CAAY;QAAU,6BAAwB,GAAxB,wBAAwB,CAA0B;IAAG,CAAC;IAEpG,GAAG,CAAC,GAAW;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;YACjF,MAAM,EAAE,IAAI,iBAAU,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC;SACzC,CAAC,CAAC;IACL,CAAC;CACF,CAAA;;YAdQ,iBAAU;YAGV,qDAAwB;;AAGpB,eAAe;IAD3B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAEP,iBAAU,EAAoC,qDAAwB;GADrF,eAAe,CAQ3B;AARY,0CAAe",
      names: [],
      sources: ["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/account/activate/activate.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ActivateService {\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\n\n  get(key: string): Observable<{}> {\n    return this.http.get(this.applicationConfigService.getEndpointFor('api/activate'), {\n      params: new HttpParams().set('key', key),\n    });\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b05703aa68fb29ee2726fb10c760e9585fcd7282"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bfjrfs23 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1bfjrfs23();
cov_1bfjrfs23().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1bfjrfs23().s[1]++;
exports.ActivateService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1bfjrfs23().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_1bfjrfs23().s[3]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_1bfjrfs23().s[4]++, require("@angular/common/http"));
const application_config_service_1 =
/* istanbul ignore next */
(cov_1bfjrfs23().s[5]++, require("app/core/config/application-config.service"));

/* istanbul ignore next */
cov_1bfjrfs23().s[6]++;
let ActivateService = class ActivateService {
  constructor(http, applicationConfigService) {
    /* istanbul ignore next */
    cov_1bfjrfs23().f[0]++;
    cov_1bfjrfs23().s[7]++;
    this.http = http;

    /* istanbul ignore next */
    cov_1bfjrfs23().s[8]++;
    this.applicationConfigService = applicationConfigService;
  }

  get(key) {
    /* istanbul ignore next */
    cov_1bfjrfs23().f[1]++;
    cov_1bfjrfs23().s[9]++;
    return this.http.get(this.applicationConfigService.getEndpointFor('api/activate'), {
      params: new http_1.HttpParams().set('key', key)
    });
  }

};

/* istanbul ignore next */
cov_1bfjrfs23().s[10]++;

ActivateService.ctorParameters = () => {
  /* istanbul ignore next */
  cov_1bfjrfs23().f[2]++;
  cov_1bfjrfs23().s[11]++;
  return [{
    type: http_1.HttpClient
  }, {
    type: application_config_service_1.ApplicationConfigService
  }];
};

/* istanbul ignore next */
cov_1bfjrfs23().s[12]++;
ActivateService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient, application_config_service_1.ApplicationConfigService])], ActivateService);

/* istanbul ignore next */
cov_1bfjrfs23().s[13]++;
exports.ActivateService = ActivateService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ha2hpbHNpbmdoL0Rlc2t0b3AvUHJvamVjdHMvd2VkZGluZy9zcmMvbWFpbi93ZWJhcHAvYXBwL2FjY291bnQvYWN0aXZhdGUvYWN0aXZhdGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBYU87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBYlAsTUFBQSxNQUFBO0FBQUE7QUFBQSx5QkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLE1BQUE7QUFBQTtBQUFBLHlCQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUE7QUFHQSxNQUFBLDRCQUFBO0FBQUE7QUFBQSx5QkFBQSxPQUFBLENBQUEsNENBQUEsQ0FBQSxDQUFBOzs7O0lBR2EsZUFBZSxHQUFBLE1BQWYsZUFBZSxDQUFBO0FBQzFCLEVBQUEsV0FBQSxDQUFvQixJQUFwQixFQUE4Qyx3QkFBOUMsRUFBZ0c7QUFBQTtBQUFBO0FBQUE7QUFBNUUsU0FBQSxJQUFBLEdBQUEsSUFBQTs7QUFBNEU7QUFBQTtBQUFsRCxTQUFBLHdCQUFBLEdBQUEsd0JBQUE7QUFBc0Q7O0FBRXBHLEVBQUEsR0FBRyxDQUFDLEdBQUQsRUFBWTtBQUFBO0FBQUE7QUFBQTtBQUNiLFdBQU8sS0FBSyxJQUFMLENBQVUsR0FBVixDQUFjLEtBQUssd0JBQUwsQ0FBOEIsY0FBOUIsQ0FBNkMsY0FBN0MsQ0FBZCxFQUE0RTtBQUNqRixNQUFBLE1BQU0sRUFBRSxJQUFJLE1BQUEsQ0FBQSxVQUFKLEdBQWlCLEdBQWpCLENBQXFCLEtBQXJCLEVBQTRCLEdBQTVCO0FBRHlFLEtBQTVFLENBQVA7QUFHRDs7QUFQeUIsQzs7Ozs7Ozs7OztVQU5uQixNQUFBLENBQUE7O1VBR0EsNEJBQUEsQ0FBQTs7Ozs7O0FBR0ksZUFBZSxHQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FEM0IsTUFBQSxDQUFBLFVBQUEsQ0FBVztBQUFFLEVBQUEsVUFBVSxFQUFFO0FBQWQsQ0FBWCxDQUMyQixFLHlDQUNBLE1BQUEsQ0FBQSxVLEVBQThDLDRCQUFBLENBQUEsd0IsRUFEOUMsQ0FBQSxFQUFmLGVBQWUsQ0FBZjs7OztBQUFBLE9BQUEsQ0FBQSxlQUFBLEdBQUEsZUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBQYXJhbXMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IEFwcGxpY2F0aW9uQ29uZmlnU2VydmljZSB9IGZyb20gJ2FwcC9jb3JlL2NvbmZpZy9hcHBsaWNhdGlvbi1jb25maWcuc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgQWN0aXZhdGVTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50LCBwcml2YXRlIGFwcGxpY2F0aW9uQ29uZmlnU2VydmljZTogQXBwbGljYXRpb25Db25maWdTZXJ2aWNlKSB7fVxuXG4gIGdldChrZXk6IHN0cmluZyk6IE9ic2VydmFibGU8e30+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldCh0aGlzLmFwcGxpY2F0aW9uQ29uZmlnU2VydmljZS5nZXRFbmRwb2ludEZvcignYXBpL2FjdGl2YXRlJyksIHtcbiAgICAgIHBhcmFtczogbmV3IEh0dHBQYXJhbXMoKS5zZXQoJ2tleScsIGtleSksXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==