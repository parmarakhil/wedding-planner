{"version":3,"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts"],"names":[],"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","sourcesContent":["import { Component, OnInit, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { PasswordResetFinishService } from './password-reset-finish.service';\n\n@Component({\n  selector: 'jhi-password-reset-finish',\n  templateUrl: './password-reset-finish.component.html',\n})\nexport class PasswordResetFinishComponent implements OnInit, AfterViewInit {\n  @ViewChild('newPassword', { static: false })\n  newPassword?: ElementRef;\n\n  initialized = false;\n  doNotMatch = false;\n  error = false;\n  success = false;\n  key = '';\n\n  passwordForm = this.fb.group({\n    newPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n    confirmPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n  });\n\n  constructor(private passwordResetFinishService: PasswordResetFinishService, private route: ActivatedRoute, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      if (params['key']) {\n        this.key = params['key'];\n      }\n      this.initialized = true;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    if (this.newPassword) {\n      this.newPassword.nativeElement.focus();\n    }\n  }\n\n  finishReset(): void {\n    this.doNotMatch = false;\n    this.error = false;\n\n    const newPassword = this.passwordForm.get(['newPassword'])!.value;\n    const confirmPassword = this.passwordForm.get(['confirmPassword'])!.value;\n\n    if (newPassword !== confirmPassword) {\n      this.doNotMatch = true;\n    } else {\n      this.passwordResetFinishService.save(this.key, newPassword).subscribe(\n        () => (this.success = true),\n        () => (this.error = true)\n      );\n    }\n  }\n}\n"]}