bea9ddd109d399f6180db31b00932d90
/* istanbul ignore next */
function cov_1avzezxxc3() {
  var path = "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/admin/configuration/configuration.component.html";
  var hash = "420b2af2dd55d8af50154af41c401b8ae55bec25";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/admin/configuration/configuration.component.html",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 2201
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "420b2af2dd55d8af50154af41c401b8ae55bec25"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1avzezxxc3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1avzezxxc3();
cov_1avzezxxc3().s[0]++;
module.exports = "<div *ngIf=\"allBeans\">\n  <h2 id=\"configuration-page-heading\" data-cy=\"configurationPageHeading\">Configuration</h2>\n\n  <span>Filter (by prefix)</span>\n  <input type=\"text\" [(ngModel)]=\"beansFilter\" (ngModelChange)=\"filterAndSortBeans()\" class=\"form-control\" />\n\n  <h3 id=\"spring-configuration\">Spring configuration</h3>\n\n  <table class=\"table table-striped table-bordered table-responsive d-table\" aria-describedby=\"spring-configuration\">\n    <thead>\n      <tr jhiSort predicate=\"prefix\" [(ascending)]=\"beansAscending\" [callback]=\"filterAndSortBeans.bind(this)\">\n        <th jhiSortBy=\"prefix\" scope=\"col\" class=\"w-40\"><span>Prefix</span> <fa-icon icon=\"sort\"></fa-icon></th>\n        <th scope=\"col\" class=\"w-60\"><span>Properties</span></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let bean of beans\">\n        <td>\n          <span>{{ bean.prefix }}</span>\n        </td>\n        <td>\n          <div class=\"row\" *ngFor=\"let property of bean.properties | keyvalue\">\n            <div class=\"col-md-4\">{{ property.key }}</div>\n            <div class=\"col-md-8\">\n              <span class=\"float-right badge-secondary break\">{{ property.value | json }}</span>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div *ngFor=\"let propertySource of propertySources; let i = index\">\n    <h4 [id]=\"'property-source-' + i\">\n      <span>{{ propertySource.name }}</span>\n    </h4>\n\n    <table class=\"table table-sm table-striped table-bordered table-responsive d-table\" [attr.aria-describedby]=\"'property-source-' + i\">\n      <thead>\n        <tr>\n          <th scope=\"col\" class=\"w-40\">Property</th>\n          <th scope=\"col\" class=\"w-60\">Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let property of propertySource.properties | keyvalue\">\n          <td class=\"break\">{{ property.key }}</td>\n          <td class=\"break\">\n            <span class=\"float-right badge-secondary break\">{{ property.value.value }}</span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n";