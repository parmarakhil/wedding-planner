{"file":"/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/layouts/navbar/navbar.component.spec.ts","mappings":"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","names":[],"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/layouts/navbar/navbar.component.spec.ts"],"sourcesContent":["jest.mock('@angular/router');\njest.mock('app/login/login.service');\n\nimport { ComponentFixture, TestBed, waitForAsync } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { NgxWebstorageModule } from 'ngx-webstorage';\n\nimport { ProfileInfo } from 'app/layouts/profiles/profile-info.model';\nimport { Account } from 'app/core/auth/account.model';\nimport { AccountService } from 'app/core/auth/account.service';\nimport { ProfileService } from 'app/layouts/profiles/profile.service';\nimport { LoginService } from 'app/login/login.service';\n\nimport { NavbarComponent } from './navbar.component';\n\ndescribe('Component Tests', () => {\n  describe('Navbar Component', () => {\n    let comp: NavbarComponent;\n    let fixture: ComponentFixture<NavbarComponent>;\n    let accountService: AccountService;\n    let profileService: ProfileService;\n    const account: Account = {\n      activated: true,\n      authorities: [],\n      email: '',\n      firstName: 'John',\n      langKey: '',\n      lastName: 'Doe',\n      login: 'john.doe',\n      imageUrl: '',\n    };\n\n    beforeEach(\n      waitForAsync(() => {\n        TestBed.configureTestingModule({\n          imports: [HttpClientTestingModule, NgxWebstorageModule.forRoot()],\n          declarations: [NavbarComponent],\n          providers: [Router, LoginService],\n        })\n          .overrideTemplate(NavbarComponent, '')\n          .compileComponents();\n      })\n    );\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(NavbarComponent);\n      comp = fixture.componentInstance;\n      accountService = TestBed.inject(AccountService);\n      profileService = TestBed.inject(ProfileService);\n    });\n\n    it('Should call profileService.getProfileInfo on init', () => {\n      // GIVEN\n      jest.spyOn(profileService, 'getProfileInfo').mockReturnValue(of(new ProfileInfo()));\n\n      // WHEN\n      comp.ngOnInit();\n\n      // THEN\n      expect(profileService.getProfileInfo).toHaveBeenCalled();\n    });\n\n    it('Should hold current authenticated user in variable account', () => {\n      // WHEN\n      comp.ngOnInit();\n\n      // THEN\n      expect(comp.account).toBeNull();\n\n      // WHEN\n      accountService.authenticate(account);\n\n      // THEN\n      expect(comp.account).toEqual(account);\n\n      // WHEN\n      accountService.authenticate(null);\n\n      // THEN\n      expect(comp.account).toBeNull();\n    });\n\n    it('Should hold current authenticated user in variable account if user is authenticated before page load', () => {\n      // GIVEN\n      accountService.authenticate(account);\n\n      // WHEN\n      comp.ngOnInit();\n\n      // THEN\n      expect(comp.account).toEqual(account);\n\n      // WHEN\n      accountService.authenticate(null);\n\n      // THEN\n      expect(comp.account).toBeNull();\n    });\n  });\n});\n"],"version":3}