d22d61675d2f69d57a0838734cf0ea8e
"use strict";

/* istanbul ignore next */
function cov_15gynk9ofk() {
  var path = "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/account/password-reset/finish/password-reset-finish.service.ts";
  var hash = "d30587eed1a2a8f95575db865ac035979d84e6b1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/account/password-reset/finish/password-reset-finish.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 44
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 37
        },
        end: {
          line: 7,
          column: 90
        }
      },
      "6": {
        start: {
          line: 8,
          column: 33
        },
        end: {
          line: 16,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 65
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 135
        }
      },
      "10": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "11": {
        start: {
          line: 17,
          column: 50
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "12": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "13": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 48
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 27
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 44
          },
          end: {
            line: 17,
            column: 45
          }
        },
        loc: {
          start: {
            line: 17,
            column: 50
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 17
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/account/password-reset/finish/password-reset-finish.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAC3C,+CAAkD;AAGlD,2FAAsF;IAGzE,0BAA0B,SAA1B,0BAA0B;IACrC,YAAoB,IAAgB,EAAU,wBAAkD;QAA5E,SAAI,GAAJ,IAAI,CAAY;QAAU,6BAAwB,GAAxB,wBAAwB,CAA0B;IAAG,CAAC;IAEpG,IAAI,CAAC,GAAW,EAAE,WAAmB;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,mCAAmC,CAAC,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;IACjI,CAAC;CACF,CAAA;;YAZQ,iBAAU;YAGV,qDAAwB;;AAGpB,0BAA0B;IADtC,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAEP,iBAAU,EAAoC,qDAAwB;GADrF,0BAA0B,CAMtC;AANY,gEAA0B",
      names: [],
      sources: ["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/account/password-reset/finish/password-reset-finish.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\n\n@Injectable({ providedIn: 'root' })\nexport class PasswordResetFinishService {\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\n\n  save(key: string, newPassword: string): Observable<{}> {\n    return this.http.post(this.applicationConfigService.getEndpointFor('api/account/reset-password/finish'), { key, newPassword });\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d30587eed1a2a8f95575db865ac035979d84e6b1"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15gynk9ofk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_15gynk9ofk();
cov_15gynk9ofk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_15gynk9ofk().s[1]++;
exports.PasswordResetFinishService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_15gynk9ofk().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_15gynk9ofk().s[3]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_15gynk9ofk().s[4]++, require("@angular/common/http"));
const application_config_service_1 =
/* istanbul ignore next */
(cov_15gynk9ofk().s[5]++, require("app/core/config/application-config.service"));

/* istanbul ignore next */
cov_15gynk9ofk().s[6]++;
let PasswordResetFinishService = class PasswordResetFinishService {
  constructor(http, applicationConfigService) {
    /* istanbul ignore next */
    cov_15gynk9ofk().f[0]++;
    cov_15gynk9ofk().s[7]++;
    this.http = http;

    /* istanbul ignore next */
    cov_15gynk9ofk().s[8]++;
    this.applicationConfigService = applicationConfigService;
  }

  save(key, newPassword) {
    /* istanbul ignore next */
    cov_15gynk9ofk().f[1]++;
    cov_15gynk9ofk().s[9]++;
    return this.http.post(this.applicationConfigService.getEndpointFor('api/account/reset-password/finish'), {
      key,
      newPassword
    });
  }

};

/* istanbul ignore next */
cov_15gynk9ofk().s[10]++;

PasswordResetFinishService.ctorParameters = () => {
  /* istanbul ignore next */
  cov_15gynk9ofk().f[2]++;
  cov_15gynk9ofk().s[11]++;
  return [{
    type: http_1.HttpClient
  }, {
    type: application_config_service_1.ApplicationConfigService
  }];
};

/* istanbul ignore next */
cov_15gynk9ofk().s[12]++;
PasswordResetFinishService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient, application_config_service_1.ApplicationConfigService])], PasswordResetFinishService);

/* istanbul ignore next */
cov_15gynk9ofk().s[13]++;
exports.PasswordResetFinishService = PasswordResetFinishService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ha2hpbHNpbmdoL0Rlc2t0b3AvUHJvamVjdHMvd2VkZGluZy9zcmMvbWFpbi93ZWJhcHAvYXBwL2FjY291bnQvcGFzc3dvcmQtcmVzZXQvZmluaXNoL3Bhc3N3b3JkLXJlc2V0LWZpbmlzaC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFhQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFiRCxNQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQTtBQUNBLE1BQUEsTUFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLHNCQUFBLENBQUEsQ0FBQTtBQUdBLE1BQUEsNEJBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSw0Q0FBQSxDQUFBLENBQUE7Ozs7SUFHYSwwQkFBMEIsR0FBQSxNQUExQiwwQkFBMEIsQ0FBQTtBQUNyQyxFQUFBLFdBQUEsQ0FBb0IsSUFBcEIsRUFBOEMsd0JBQTlDLEVBQWdHO0FBQUE7QUFBQTtBQUFBO0FBQTVFLFNBQUEsSUFBQSxHQUFBLElBQUE7O0FBQTRFO0FBQUE7QUFBbEQsU0FBQSx3QkFBQSxHQUFBLHdCQUFBO0FBQXNEOztBQUVwRyxFQUFBLElBQUksQ0FBQyxHQUFELEVBQWMsV0FBZCxFQUFpQztBQUFBO0FBQUE7QUFBQTtBQUNuQyxXQUFPLEtBQUssSUFBTCxDQUFVLElBQVYsQ0FBZSxLQUFLLHdCQUFMLENBQThCLGNBQTlCLENBQTZDLG1DQUE3QyxDQUFmLEVBQWtHO0FBQUUsTUFBQSxHQUFGO0FBQU8sTUFBQTtBQUFQLEtBQWxHLENBQVA7QUFDRDs7QUFMb0MsQzs7Ozs7Ozs7OztVQU45QixNQUFBLENBQUE7O1VBR0EsNEJBQUEsQ0FBQTs7Ozs7O0FBR0ksMEJBQTBCLEdBQUEsT0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUR0QyxNQUFBLENBQUEsVUFBQSxDQUFXO0FBQUUsRUFBQSxVQUFVLEVBQUU7QUFBZCxDQUFYLENBQ3NDLEUseUNBQ1gsTUFBQSxDQUFBLFUsRUFBOEMsNEJBQUEsQ0FBQSx3QixFQURuQyxDQUFBLEVBQTFCLDBCQUEwQixDQUExQjs7OztBQUFBLE9BQUEsQ0FBQSwwQkFBQSxHQUFBLDBCQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgQXBwbGljYXRpb25Db25maWdTZXJ2aWNlIH0gZnJvbSAnYXBwL2NvcmUvY29uZmlnL2FwcGxpY2F0aW9uLWNvbmZpZy5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBQYXNzd29yZFJlc2V0RmluaXNoU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaHR0cDogSHR0cENsaWVudCwgcHJpdmF0ZSBhcHBsaWNhdGlvbkNvbmZpZ1NlcnZpY2U6IEFwcGxpY2F0aW9uQ29uZmlnU2VydmljZSkge31cblxuICBzYXZlKGtleTogc3RyaW5nLCBuZXdQYXNzd29yZDogc3RyaW5nKTogT2JzZXJ2YWJsZTx7fT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAucG9zdCh0aGlzLmFwcGxpY2F0aW9uQ29uZmlnU2VydmljZS5nZXRFbmRwb2ludEZvcignYXBpL2FjY291bnQvcmVzZXQtcGFzc3dvcmQvZmluaXNoJyksIHsga2V5LCBuZXdQYXNzd29yZCB9KTtcbiAgfVxufVxuIl19