{"version":3,"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/layouts/navbar/navbar.component.ts"],"names":[],"mappingsyBY;;;;;;;;;;;;;;;;;;;;AAzBZ,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,QAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;AAEA,MAAA,eAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;AAEA,MAAA,iBAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,+BAAA,CAAA,CAAA;AACA,MAAA,eAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;AACA,MAAA,iBAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,sCAAA,CAAA,CAAA;;;;IAOa,eAAe,GAAA,MAAf,eAAe,CAAA;AAO1B,EAAA,WAAA,CACU,YADV,EAEU,cAFV,EAGU,cAHV,EAIU,MAJV,EAIwB;AAAA;AAAA;AAAA;AAHd,SAAA,YAAA,GAAA,YAAA;;AAGc;AAAA;AAFd,SAAA,cAAA,GAAA,cAAA;;AAEc;AAAA;AADd,SAAA,cAAA,GAAA,cAAA;;AACc;AAAA;AAAd,SAAA,MAAA,GAAA,MAAA;;AAAc;AAAA;AATxB,SAAA,iBAAA,GAAoB,IAApB;;AASwB;AAAA;AAPxB,SAAA,OAAA,GAAU,EAAV;;AAOwB;AAAA;AANxB,SAAA,OAAA,GAA0B,IAA1B;;AAMwB;AAAA;;AAEtB,QAAI,eAAA,CAAA,OAAJ,EAAa;AAAA;AAAA;AAAA;AACX,WAAK,OAAL,GAAe,eAAA,CAAA,OAAA,CAAQ,WAAR,GAAsB,UAAtB,CAAiC,GAAjC;AAAA;AAAA,mCAAwC,eAAA,CAAA,OAAxC;AAAA;AAAA,mCAAkD,MAAM,eAAA,CAAA,OAAxD,CAAf;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAGD;;AAED,EAAA,QAAQ,GAAA;AAAA;AAAA;AAAA;AACN,SAAK,cAAL,CAAoB,cAApB,GAAqC,SAArC,CAA+C,CAAA,WAAW,KAAG;AAAA;AAAA;AAAA;AAC3D,WAAK,YAAL,GAAoB,WAAW,CAAC,YAAhC;;AAD2D;AAAA;AAE3D,WAAK,cAAL,GAAsB,WAAW,CAAC,cAAlC;AACD,KAHD;;AADM;AAAA;AAKN,SAAK,cAAL,CAAoB,sBAApB,GAA6C,SAA7C,CAAuD,CAAA,OAAO,KAAK;AAAA;AAAA;AAAA;AAAA,kBAAK,OAAL,GAAe,OAAf;AAAsB,KAAzF;AACD;;AAED,EAAA,cAAc,GAAA;AAAA;AAAA;AAAA;AACZ,SAAK,iBAAL,GAAyB,IAAzB;AACD;;AAED,EAAA,KAAK,GAAA;AAAA;AAAA;AAAA;AACH,SAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;AAED,EAAA,MAAM,GAAA;AAAA;AAAA;AAAA;AACJ,SAAK,cAAL;;AADI;AAAA;AAEJ,SAAK,YAAL,CAAkB,MAAlB;;AAFI;AAAA;AAGJ,SAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACD;;AAED,EAAA,YAAY,GAAA;AAAA;AAAA;AAAA;AACV,SAAK,iBAAL,GAAyB,CAAC,KAAK,iBAA/B;AACD;;AA1CyB,C;;;;;;;;;;UARnB,eAAA,CAAA;;UADA,iBAAA,CAAA;;UAEA,iBAAA,CAAA;;UANA,QAAA,CAAA;;;;;;AAaI,eAAe,GAAA,OAAA,CAAA,UAAA,CAAA,CAL3B,MAAA,CAAA,SAAA,CAAU;AACT,EAAA,QAAQ,EAAE,YADD;AAET,EAAA,QAAA,EAAA,OAAA,CAAA,yBAAA;AAFS,CAAV,CAK2B,E,yCAQF,eAAA,CAAA,Y,EACE,iBAAA,CAAA,c,EACA,iBAAA,CAAA,c,EACR,QAAA,CAAA,M,EAXQ,CAAA,EAAf,eAAe,CAAf;;;;AAAA,OAAA,CAAA,eAAA,GAAA,eAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { VERSION } from 'app/app.constants';\nimport { Account } from 'app/core/auth/account.model';\nimport { AccountService } from 'app/core/auth/account.service';\nimport { LoginService } from 'app/login/login.service';\nimport { ProfileService } from 'app/layouts/profiles/profile.service';\n\n@Component({\n  selector: 'jhi-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent implements OnInit {\n  inProduction?: boolean;\n  isNavbarCollapsed = true;\n  openAPIEnabled?: boolean;\n  version = '';\n  account: Account | null = null;\n\n  constructor(\n    private loginService: LoginService,\n    private accountService: AccountService,\n    private profileService: ProfileService,\n    private router: Router\n  ) {\n    if (VERSION) {\n      this.version = VERSION.toLowerCase().startsWith('v') ? VERSION : 'v' + VERSION;\n    }\n  }\n\n  ngOnInit(): void {\n    this.profileService.getProfileInfo().subscribe(profileInfo => {\n      this.inProduction = profileInfo.inProduction;\n      this.openAPIEnabled = profileInfo.openAPIEnabled;\n    });\n    this.accountService.getAuthenticationState().subscribe(account => (this.account = account));\n  }\n\n  collapseNavbar(): void {\n    this.isNavbarCollapsed = true;\n  }\n\n  login(): void {\n    this.router.navigate(['/login']);\n  }\n\n  logout(): void {\n    this.collapseNavbar();\n    this.loginService.logout();\n    this.router.navigate(['']);\n  }\n\n  toggleNavbar(): void {\n    this.isNavbarCollapsed = !this.isNavbarCollapsed;\n  }\n}\n"]}