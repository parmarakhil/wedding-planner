{"file":"/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/home/home.component.spec.ts","mappings":"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","names":[],"sources":["/Users/akhilsingh/Desktop/Projects/wedding/src/main/webapp/app/home/home.component.spec.ts"],"sourcesContent":["jest.mock('app/core/auth/account.service');\njest.mock('@angular/router');\n\nimport { ComponentFixture, TestBed, waitForAsync } from '@angular/core/testing';\nimport { Router } from '@angular/router';\nimport { of, Subject } from 'rxjs';\n\nimport { AccountService } from 'app/core/auth/account.service';\nimport { Account } from 'app/core/auth/account.model';\n\nimport { HomeComponent } from './home.component';\n\ndescribe('Component Tests', () => {\n  describe('Home Component', () => {\n    let comp: HomeComponent;\n    let fixture: ComponentFixture<HomeComponent>;\n    let mockAccountService: AccountService;\n    let mockRouter: Router;\n    const account: Account = {\n      activated: true,\n      authorities: [],\n      email: '',\n      firstName: null,\n      langKey: '',\n      lastName: null,\n      login: 'login',\n      imageUrl: null,\n    };\n\n    beforeEach(\n      waitForAsync(() => {\n        TestBed.configureTestingModule({\n          declarations: [HomeComponent],\n          providers: [AccountService, Router],\n        })\n          .overrideTemplate(HomeComponent, '')\n          .compileComponents();\n      })\n    );\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(HomeComponent);\n      comp = fixture.componentInstance;\n      mockAccountService = TestBed.inject(AccountService);\n      mockAccountService.identity = jest.fn(() => of(null));\n      mockAccountService.getAuthenticationState = jest.fn(() => of(null));\n      mockRouter = TestBed.inject(Router);\n    });\n\n    describe('ngOnInit', () => {\n      it('Should synchronize account variable with current account', () => {\n        // GIVEN\n        const authenticationState = new Subject<Account | null>();\n        mockAccountService.getAuthenticationState = jest.fn(() => authenticationState.asObservable());\n\n        // WHEN\n        comp.ngOnInit();\n\n        // THEN\n        expect(comp.account).toBeNull();\n\n        // WHEN\n        authenticationState.next(account);\n\n        // THEN\n        expect(comp.account).toEqual(account);\n\n        // WHEN\n        authenticationState.next(null);\n\n        // THEN\n        expect(comp.account).toBeNull();\n      });\n    });\n\n    describe('login', () => {\n      it('Should navigate to /login on login', () => {\n        // WHEN\n        comp.login();\n\n        // THEN\n        expect(mockRouter.navigate).toHaveBeenCalledWith(['/login']);\n      });\n    });\n\n    describe('ngOnDestroy', () => {\n      it('Should destroy authentication state subscription on component destroy', () => {\n        // GIVEN\n        const authenticationState = new Subject<Account | null>();\n        mockAccountService.getAuthenticationState = jest.fn(() => authenticationState.asObservable());\n\n        // WHEN\n        comp.ngOnInit();\n\n        // THEN\n        expect(comp.account).toBeNull();\n\n        // WHEN\n        authenticationState.next(account);\n\n        // THEN\n        expect(comp.account).toEqual(account);\n\n        // WHEN\n        comp.ngOnDestroy();\n        authenticationState.next(null);\n\n        // THEN\n        expect(comp.account).toEqual(account);\n      });\n    });\n  });\n});\n"],"version":3}